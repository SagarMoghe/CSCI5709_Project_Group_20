{"version":3,"sources":["Jigar/Components/Images/A2FooterFb.png","Jigar/Components/Images/A2FooterInsta.png","Jigar/Components/Images/A2FooterTwitter.png","serviceWorker.js","Raj/components/login.jsx","Raj/components/register.jsx","Raj/components/description.jsx","Raj/components/loginReg.jsx","Jigar/Components/Footer/Footer.jsx","Raj/components/navbarHeader.jsx","Raj/components/createevent.jsx","Raj/components/sortAndSearch.jsx","Raj/components/posteventhist.jsx","Raj/components/createeventContainer.jsx","Raj/components/notfications/subReqDetails.jsx","Raj/components/notfications/requestMainCard.jsx","Raj/components/notfications/requestsReceived.jsx","Raj/components/findeventContainer.jsx","Raj/components/notfications/responseMainCard.jsx","Raj/components/notfications/responsesReceived.jsx","Raj/components/home.jsx","Raj/components/errorpage.jsx","Raj/components/navbarTemplate.jsx","index.js","Raj/images/logo.png"],"names":["module","exports","Boolean","window","location","hostname","match","Login","props","mySubmitHandler","event","preventDefault","state","username","password","length","sessionStorage","setItem","setState","isLoggedIn","isInvalidCred","onFieldChange","usr","target","name","val","value","this","to","errMsg","style","fontStyle","color","fontWeight","Navbar","className","Col","Brand","href","src","logo","alt","height","maxWidth","matches","fontFamily","fontSize","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Control","type","placeholder","onChange","paddingLeft","Button","variant","Component","Register","onFromToEnter","onPasswordEnter","invalidPwd","onEmailEnter","test","String","toLowerCase","invalidEmail","handleDateChange","date","dob","onGenderChange","genderVal","form","currentTarget","console","log","checkValidity","stopPropagation","isValid","validated","email","pwdbstyle","emailbstyle","errMsgPwd","errMsgEmail","Container","width","backgroundColor","borderRadius","noValidate","required","selected","Description","myStyle","myStyleSpan","lg","LoginAndReg","FooterCus","Footer","classname","bg","expand","sticky","Toggle","aria-controls","Collapse","Nav","Link","fb","id","class","insta","twit","Date","getFullYear","NavbarHeader","onButtonClick","isLoggedin","clear","isLogoutClicked","getItem","signinText","buttonText","exact","activeClassName","onClick","CreateEvent","renderByEventdd","etype","eventTypeVal","rengerOptionalinLabel","seats","onNumInputChange","InputGroup","Prepend","Text","aria-describedby","estPrice","renderDescription","isCreate","description","onDescriptionEnter","renderDateRange","journeyDate2","handleDateChange2","isUpdate","hedingText","isValidated","onEventddChange","Feedback","fromAddress","toAddress","journeyDate","paddingBottom","SortAndSearch","header","searchBy","onSearchByChange","searchTerm","onSearchTermChange","sortyBy","onSortByChange","PostEventHistory","toggleHover","hover","toggleHoverDelete","hoverDelete","cursor","borderStyle","borderColor","background","onMouseEnter","onMouseLeave","onPostedEvetClicked","eventHistory","wordWrap","dateToDisplay","aria-label","onDeleteEvetClicked","aria-hidden","CreateEventContainer","updateItemId","map","item","eventId","newItem1","push","eventHistoryToDisplay","dateString","x","toString","split","index","indexOf","history","dateToDisplay1","undefined","filteredEventHistory","filter","sort","a","b","filteredevents","renderPostEventHistory","key","sorthBy","SubReqDetails","onClickInfo","onClickAccept","status","onClickReject","showAlert","icon","Card","border","Body","md","xs","RequestMainCard","Accordion","Header","padding","eventKey","eventDetail","requests","requestId","RequestsReceived","eventDetails","eventDetailId","FindEventContainer","dateToDisplay2","eventsHistory","isFiltered","searchResults","searchResultsToDisplay","filteredsearchResults","renderSearchResults","ResponseMainCard","renderHeader","renderFooterText","ResponsesReceived","Home","ErrorPage","paddingTop","NavbarTemplate","overflow","path","component","home","createeventContainer","Error","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81c4921f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/A2FooterFb.465faff2.png\";","module.exports = __webpack_public_path__ + \"static/media/A2FooterInsta.7742981d.png\";","module.exports = __webpack_public_path__ + \"static/media/A2FooterTwitter.0452ac38.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';  \r\nimport MediaQuery from 'react-responsive'\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './events.css';\r\nimport logo from '../images/logo.png'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLoggedIn: false,\r\n            isInvalidCred:false\r\n        }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n        \r\n        if (username.length > 0 && password.length > 0) {\r\n            sessionStorage.setItem( \"username\", username );\r\n            this.setState({ isLoggedIn: true, isInvalidCred: false });\r\n        }\r\n        else {\r\n            this.setState({isInvalidCred:true})\r\n        }\r\n    }\r\n\r\n    onFieldChange = (event) => {\r\n        let usr = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [usr]: val });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n        \r\n        let errMsg = this.state.isInvalidCred ? <span style={{ fontStyle: \"italic\", color:\"#dc3545\" }}><span style={{fontWeight:\"bold\"}}>Invalid username or password</span></span> : null;\r\n        return (\r\n            <Navbar className=\"navbg\">\r\n                <Col >\r\n                    <Navbar.Brand href=\"login\">\r\n                        \r\n                        <img src={logo} alt=\"logo\" style={{ height: \"135px\" }} />\r\n                        \r\n                        \r\n      \r\n      <MediaQuery  maxWidth=\"690px\" >\r\n      \r\n      {(matches) =>\r\n        matches\r\n          ? null\r\n          : <strong style={{ fontFamily: \"unset\", fontSize: \"xxx-large\" }}>EventGo</strong>\r\n      }\r\n    </MediaQuery>\r\n                        \r\n                        \r\n                    </Navbar.Brand>\r\n                </Col>\r\n                <Col >\r\n                \r\n                    <Form onSubmit={this.mySubmitHandler} className=\"loginForm\">\r\n                        \r\n                        <Form.Group as={Row} controlId=\"usr\">\r\n                            <Form.Label column sm=\"3.5\" className=\"loginLabel\" style={{ color: \"white\" }}>Username:</Form.Label>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"username\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onFieldChange}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Row} controlId=\"pwd\">\r\n                            <Form.Label column sm=\"3.5\" className=\"loginLabel\" style={{ color: \"white\" }}>Password:</Form.Label>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control type=\"password\" placeholder=\"\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onFieldChange}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <div style={{ paddingLeft: \"27%\" }}>\r\n                            <Row>\r\n                                <Col sm=\"2\">\r\n                            \r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Login\r\n                            </Button>\r\n                                </Col>\r\n                                <Col>\r\n                                    {errMsg}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './events.css'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            dob: '',\r\n            genderVal: '',\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            validated: false,\r\n            invalidPwd: false,\r\n            invalidEmail: false,\r\n            isValid:false\r\n            \r\n        }\r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onPasswordEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length > 4) {\r\n            this.setState({ invalidPwd: false }); \r\n        }\r\n        else {    \r\n            this.setState({ invalidPwd: true });\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onEmailEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        \r\n        if (re.test(String(value).toLowerCase())) {\r\n            this.setState({ invalidEmail: false }); \r\n        }\r\n        else {    \r\n            this.setState({ invalidEmail: true });\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n          dob: date\r\n        });\r\n    };\r\n    \r\n    onGenderChange = (event) => {\r\n        this.setState({ genderVal: event.target.value })\r\n        \r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        const form = event.currentTarget;\r\n        const { invalidPwd, invalidEmail, username } = this.state;\r\n        console.log(invalidPwd,invalidEmail)\r\n        if (form.checkValidity() === false || invalidPwd || invalidEmail) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            sessionStorage.setItem( \"username\", username );\r\n            this.setState({ isValid: true });\r\n        }\r\n      \r\n        this.setState({ validated: true });\r\n    };\r\n\r\n    render() { \r\n        \r\n        const myBordeSrtyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n\r\n        let pwdbstyle = this.state.invalidPwd ? \"invalidValuebStyle\" : \"validValuebStyle\";\r\n        let emailbstyle = this.state.invalidEmail ? \"invalidValuebStyle\" : \"validValuebStyle\";\r\n        let errMsgPwd = this.state.invalidPwd ? <span style={{ fontStyle: \"italic\" }}><small className=\"text-muted\" >Password must be atleast 5 Characters long</small></span> : null;\r\n        let errMsgEmail = this.state.invalidEmail ? <span style={{fontStyle: \"italic\"}}><small  className=\"text-muted\" >Please enter a valid email address</small></span> : null;\r\n\r\n        if (this.state.isValid) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n        return (<div style={{height:\"100%\"}}>\r\n            <br/>\r\n            <Col style={{height:\"100%\"}}>\r\n                <Container style={myBordeSrtyle}>\r\n\r\n                \r\n            <h2>Create new account</h2>\r\n            \r\n                <Form noValidate validated={this.state.validated} onSubmit={this.mySubmitHandler}>\r\n                        \r\n                    <Form.Group as={Row} controlId=\"usrname\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Username:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control type=\"text\" placeholder=\"\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.onFromToEnter}\r\n                            required\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                        \r\n\r\n                    <Form.Group as={Row} controlId=\"pwd\">\r\n                        <Form.Label column sm=\"3.5\"  className=\"loginLabel\">Password:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control type=\"password\" placeholder=\"\"\r\n                            name=\"password\" className={pwdbstyle}\r\n                            value={this.state.password}\r\n                            onChange={this.onPasswordEnter}\r\n                            required\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <Col>\r\n                    {errMsgPwd}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row} controlId=\"em\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Email:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control type=\"text\" placeholder=\"\"\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onEmailEnter}\r\n                            required\r\n                            className={emailbstyle}\r\n                            />\r\n                    </Col>\r\n                    <Col>\r\n                        {errMsgEmail}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"date\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Date of birth:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <DatePicker className=\"calenderpicker form-control\"\r\n                                selected={this.state.dob}\r\n                                onChange={this.handleDateChange}\r\n                                value={this.state.dob}\r\n                                required\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"gender\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Gender:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control as=\"select\" value={this.state.genderVal} onChange={this.onGenderChange} required>\r\n                                <option value=''>Choose...</option>\r\n                                <option value=\"ma\">Male</option>\r\n                                <option value=\"fe\">Female</option>\r\n                                <option value=\"ot\">Other</option>\r\n\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <div style={{ paddingLeft: \"27%\"}}>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Register\r\n                    </Button>\r\n                    </div>\r\n                </Form>\r\n                </Container>\r\n            </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Register;","import React, { Component } from 'react';\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport logo from '../images/logo.png'\r\n\r\nclass Description extends Component {\r\n    state = {  }\r\n    render() { \r\n        const myStyle = {\r\n            fontFamily: \"cursive\"\r\n            \r\n        }\r\n        const myStyleSpan = {\r\n            color: \"#035fbb\"\r\n            \r\n        }\r\n        const myBordeSrtyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        return (<div style={{\"height\":\"100%\"}}>\r\n            <br />\r\n            <Col style={{\"height\":\"100%\"}}>\r\n            <Container style={myBordeSrtyle}>\r\n                    \r\n                    <h2>Why EventGo</h2>\r\n               \r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>EventGo</span> is a platform to connect various travellers or tourists travelling from a\r\ncommon point of origin to the same destination</h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Long distance travelling</span> Post and Request any kind of event anywhere across the globe  </h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Signup for free</span> Event Creators and Event Requestor don't pay any registration fee or membership fee </h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Make Connections</span> Sharing travelling plans is a great way to make new friends </h6>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Description;","import React, { Component } from 'react';  \r\nimport Login from './login'\r\nimport Register from './register'\r\nimport Description from './description'\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\nclass LoginAndReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                \r\n                <Login />\r\n                \r\n                <Row style={{width:\"100%\"}}>\r\n                    <Col >\r\n                        <Description />\r\n                    </Col>\r\n                    <Col >\r\n                        <Register />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginAndReg;","import React, {Component} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {Footer} from \"react-materialize\";\r\nimport './Footer.css';\r\nimport fb from \"../Images/A2FooterFb.png\";\r\nimport insta from \"../Images/A2FooterInsta.png\";\r\nimport twit from \"../Images/A2FooterTwitter.png\";\r\n\r\nexport class FooterCus extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <footer className={Footer}>\r\n                <section>\r\n                    <br/>\r\n                    <Navbar classname=\"footer\" bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"bottom\" >\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse >\r\n                            <ul></ul><ul></ul><ul></ul><ul></ul><ul></ul>\r\n                            <ul></ul><ul></ul>\r\n                            <ul>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\" >About US</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">FAQs</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/feedback\">Feedback</Nav.Link>\r\n                            </ul>\r\n                            <ul></ul>\r\n                            <ul></ul>\r\n                            <ul></ul>\r\n                            <ul className=\"navbar-nav\">\r\n                                <Nav.Link className=\"footer-info\" href=\"https://www.facebook.com/\" >\r\n                                    <img\r\n                                        src={fb}\r\n                                        id=\"fb-link\"\r\n                                        class=\"img-fluid\"\r\n                                        width=\"50\"\r\n                                        height=\"50\"\r\n                                        alt=\"\"\r\n                                    /></Nav.Link>\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                <Nav.Link className=\"footer-info\" href=\"https://www.instagram.com/\" >\r\n                                    <img\r\n                                        src={insta}\r\n                                        id=\"insta-links\"\r\n                                        className=\"img-fluid\"\r\n                                        width=\"50\"\r\n                                        height=\"50\"\r\n                                        alt=\"\"/></Nav.Link>\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                <Nav.Link className=\"footer-info\" href=\"https://twitter.com/explore\" >\r\n                                    <img\r\n                                        src={twit}\r\n                                        id=\"twit-links\"\r\n                                        className=\"img-fluid\"\r\n                                        width=\"53\"\r\n                                        height=\"53\"\r\n                                        alt=\"\"/></Nav.Link>\r\n                            </ul>\r\n                            <ul></ul>\r\n                            <ul>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">Contact Us</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">Terms</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">Privacy Policy</Nav.Link>\r\n                            </ul>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </section>\r\n\r\n                <section>\r\n                    <Navbar bg=\"light\" variant=\"light\"expand=\"lg\" sticky=\"bottom\" >\r\n                        <ul className=\"navbar-nav mr-auto\" >\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            &copy; {new Date().getFullYear()} Copyright: <a href=\"/home\"> RideShare.com </a>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        </ul>\r\n                    </Navbar>\r\n                </section>\r\n            </footer>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Nav,Button,Row,Col,Navbar } from \"react-bootstrap\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport logo from '../images/logo.png';\r\nimport { MdNotificationsActive } from \"react-icons/md\";\r\nimport {FaUserCircle} from 'react-icons/fa'\r\n\r\nclass NavbarHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n\r\n        this.state = {\r\n            isLoggedin,\r\n            username,\r\n            isLogoutClicked: false\r\n        }\r\n\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        if (this.state.isLoggedin) {\r\n            sessionStorage.clear();\r\n            this.setState({ isLoggedin: false,isLogoutClicked: true  })\r\n        }\r\n        else {\r\n            this.setState({ isLoggedin: false,isLogoutClicked: true  })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const signinText = this.state.isLoggedin ?\r\n            <div>\r\n                <FaUserCircle style={{color:\"white\", height: \"29px\", width: \"35px\"}}/>\r\n                <a style={{color:\"white\",fontSize:\"20px\"}} href=\"createevent\">\r\n                    {this.state.username}</a>\r\n            </div> : null;\r\n\r\n        const buttonText = this.state.isLoggedin ?\r\n            \"Logout\" : \"Login/Register\";\r\n\r\n        if (this.state.isLogoutClicked) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                <Navbar className=\"navbg\" expand=\"lg\" sticky=\"top\">\r\n                    <section>\r\n                        <Navbar.Brand href=\"home\">\r\n                            <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                            <strong style={{ fontFamily: \"unset\", fontSize: \"medium\" }}>EventGo</strong>\r\n                        </Navbar.Brand>\r\n                    </section>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <Nav className=\"ml-auto\" variant=\"pills\">\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/createevent\" style={{ color: \"white\" }}>\r\n                                    CreateEvent\r\n                                </NavLink>\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/findevent\" style={{ color: \"white\" }}>\r\n                                    FindEvent\r\n                                </NavLink>\r\n                            </Nav>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        </ul>\r\n                        <Nav className=\"ml-auto\" variant=\"pills\">\r\n                            {signinText}\r\n                            &nbsp;\r\n                            &nbsp;\r\n                            <NavLink  exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/home\" style={{ color: \"white\" }}>\r\n                                <MdNotificationsActive style={{color:\"white\", height: \"29px\", width: \"35px\"}}/>\r\n                            </NavLink >\r\n                            &nbsp;\r\n                            &nbsp;\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.onButtonClick} style={{ backgroundColor: \"transparent\" }}>\r\n                                {buttonText}\r\n                            </Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarHeader;","import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Form, Button, InputGroup, Col, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\n \r\n\r\nclass CreateEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    renderByEventdd = (etype) => {\r\n        if (etype === \"car\") {\r\n            return this.props.eventTypeVal === \"cj\" ? <Row>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Seats available: {this.rengerOptionalinLabel()}</Form.Label>\r\n                    <div className=\"def-number-input number-input\">\r\n                        <Form.Control\r\n                            value={this.props.seats}\r\n                            name=\"seats\"\r\n                            onChange={this.props.onNumInputChange}\r\n                            type=\"number\"\r\n                            placeholder=\"0\" />\r\n                                               \r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"toAddr\">\r\n                    <Form.Label>Estimated price: {this.rengerOptionalinLabel()}</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">CAD $</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"0\"\r\n                            name=\"estPrice\"\r\n                            onChange={this.props.onNumInputChange}\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            value={this.props.estPrice} />\r\n                    </InputGroup>\r\n                </Form.Group> </Row> : null;\r\n        }\r\n    }\r\n    \r\n    renderDescription = () => {\r\n        console.log(this.props.isCreate)\r\n        return (this.props.isCreate ? <Form.Row>\r\n            <Form.Group as={Col} controlId=\"txtarea\">\r\n                <Form.Label>Description: <span className=\"fstyle\">{100 - this.props.description.length} words remaining</span>{this.rengerOptionalinLabel()}</Form.Label>\r\n                <Form.Control as=\"textarea\"\r\n                    placeholder=\"Max 100 words..\"\r\n                    name=\"description\"\r\n                    value={this.props.description}\r\n                    onChange={this.props.onDescriptionEnter}\r\n                />\r\n            </Form.Group>\r\n        </Form.Row> : null);\r\n    }\r\n\r\n    renderDateRange = () => {\r\n        if (!this.props.isCreate) {\r\n            return (<Form.Group as={Col} controlId=\"date\">\r\n                <Form.Label>Date Range <span className=\"fstyle\">(Optional)</span></Form.Label>\r\n                <div>\r\n                    <DatePicker className=\"calenderpicker form-control\"\r\n                        value={this.props.journeyDate2}\r\n                        name=\"journeyDate2\"\r\n                        selected={this.props.journeyDate2}\r\n                        onChange={this.props.handleDateChange2}\r\n                    />\r\n                </div>\r\n                \r\n            </Form.Group>)\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n    rengerOptionalinLabel = () => {\r\n        return this.props.isCreate ? <span className=\"fstyle\">(Optional)</span> : null;\r\n    }\r\n\r\n    render() {\r\n        const myStyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        \r\n        \r\n        let buttonText = this.props.isCreate ? (this.props.isUpdate ? 'Update' : 'Create'): ('Find Event');\r\n        let hedingText = this.props.isCreate ? 'Create Event' : 'Find Event';\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <br />\r\n                <div style={myStyle}>\r\n                \r\n                    <div>\r\n                        <Col>\r\n                            <h3>{hedingText}</h3>\r\n                        </Col>\r\n                    </div>\r\n                \r\n                    <Col>\r\n                        <Form noValidate validated={this.props.isValidated} onSubmit={this.props.mySubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"eventId\">\r\n                                    <Form.Label>Event type:</Form.Label>\r\n                                    <Form.Control as=\"select\" value={this.props.eventTypeVal} onChange={this.props.onEventddChange} required>\r\n                                        <option value=\"\">Choose...</option>\r\n                                        <option value=\"cj\">Car journey</option>\r\n                                        <option value=\"fj\">Flight journey</option>\r\n                                        <option value=\"oe\">Organizing event</option>\r\n\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid type.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"fromAddr\">\r\n                                    <Form.Label>From:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"From\"\r\n                                        value={this.props.fromAddress}\r\n                                        name=\"fromAddress\"\r\n                                        onChange={this.props.onFromToEnter} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"toAddr\">\r\n                                    <Form.Label>To:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"To\"\r\n                                        value={this.props.toAddress}\r\n                                        name=\"toAddress\"\r\n                                        onChange={this.props.onFromToEnter} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"date\">\r\n                                    <Form.Label>Date of journey:  {this.rengerOptionalinLabel()}</Form.Label>\r\n                                    <div>\r\n                                        <DatePicker className=\"calenderpicker form-control\"\r\n                                            value={this.props.journeyDate}\r\n                                            name=\"journeyDate\"\r\n                                            selected={this.props.journeyDate}\r\n                                            onChange={this.props.handleDateChange}\r\n                                        />\r\n                                    </div>\r\n                                        \r\n                                </Form.Group>\r\n                                {this.renderDateRange()}\r\n                            </Form.Row>\r\n                            \r\n                            <Form.Row>\r\n                                {this.renderByEventdd(\"car\")}\r\n                            </Form.Row>\r\n                            {this.renderDescription()}\r\n                            <div style={{paddingBottom:\"10px\"}}>\r\n\r\n                            \r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                {buttonText}\r\n                                </Button>\r\n                                </div>\r\n                        </Form>\r\n                    </Col>\r\n                    \r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CreateEvent;","import React, { Component } from 'react';\r\nimport { Form, Button, InputGroup, Col,Row } from \"react-bootstrap\";\r\n\r\nclass SortAndSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        const myStyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        const header = this.props.isCreate ? 'Events History' : 'Search Results'\r\n        return (<div style={myStyle}>\r\n            <Col>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>{header}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    \r\n                    \r\n                    \r\n                    <Col>\r\n                        <Form.Group controlId=\"eventId\">\r\n                            <Form.Label>Search by:</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.props.searchBy} name=\"searchBy\" onChange={this.props.onSearchByChange}>\r\n                                <option value=\"fromAddress\">From</option>\r\n                                <option value=\"toAddress\">To</option>\r\n                                <option value=\"seats\">Seats</option>\r\n                                <option value=\"estPrice\">Price</option>\r\n                                <option value=\"description\">Description</option>\r\n                    \r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"search\">\r\n                            <Form.Label>Search:</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Search..\"\r\n                                value={this.props.searchTerm}\r\n                                name=\"searchTerm\"\r\n                                onChange={this.props.onSearchTermChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"searchById\">\r\n                            <Form.Label>Sort by:</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.props.sortyBy} name=\"sorthBy\" onChange={this.props.onSortByChange}>\r\n                                <option value=\"id\">Event added</option>\r\n                                <option value=\"fromAddress\">From</option>\r\n                                <option value=\"toAddress\">To</option>\r\n                                <option value=\"journeyDate\">Date of Journey</option>\r\n                                <option value=\"seats\">Seats</option>\r\n                                <option value=\"estPrice\">Price</option>\r\n                                <option value=\"description\">Description</option>\r\n                    \r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                \r\n                </Row>\r\n            </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default SortAndSearch;","import React, { Component } from 'react';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\nclass PostEventHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false,\r\n            hoverDelete: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n    \r\n    toggleHoverDelete = () => {\r\n        this.setState({ hoverDelete: !this.state.hoverDelete })\r\n    }\r\n\r\n    render() { \r\n        let myStyle = {\r\n           \r\n            borderRadius: \"7px\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderStyle: \"outset\",\r\n            borderColor:\"#c3c6d8\"\r\n            \r\n        }\r\n        let myStyleDelete = {\r\n            backgroundColor: \"yellow\",\r\n            borderRadius: \"7px\",\r\n            cursor: \"pointer\"\r\n            \r\n        }\r\n        if (this.state.hover) {\r\n            myStyle = {\r\n                background: \"linear-gradient(180deg,#c3c6d8,transparent)\",\r\n                backgroundColor: \"grey\",\r\n                borderRadius: \"7px\",\r\n                cursor: \"pointer\"\r\n                \r\n            }\r\n        }\r\n        \r\n        if (this.state.hoverDelete) {\r\n            myStyleDelete = {\r\n                backgroundColor:\"red\",\r\n                borderRadius: \"7px\",\r\n                cursor: \"pointer\"\r\n                \r\n            }\r\n          }\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <br />\r\n                \r\n                    \r\n                <div style={myStyle}>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col sm={10}>\r\n                                <span onMouseEnter={this.toggleHover}\r\n                                    onMouseLeave={this.toggleHover}\r\n                                    onClick={() => this.props.onPostedEvetClicked(this.props.eventHistory)}\r\n                                    style={{wordWrap: \"break-word\"}}>\r\n                                    \r\n                                        From <strong>{this.props.eventHistory.fromAddress}</strong> to <strong>{this.props.eventHistory.toAddress}</strong> on <strong>{this.props.eventHistory.dateToDisplay}</strong> Seats available: <strong>{this.props.eventHistory.seats} </strong>\r\n                                    \r\n                                    \r\n                                         Estimated price: <strong>{this.props.eventHistory.estPrice} </strong>\r\n                                    \r\n                                  \r\n                                         Description: <strong>{this.props.eventHistory.description}</strong>\r\n                                    \r\n                                </span>\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                                <button type=\"button\" className=\"close\" aria-label=\"Close\"\r\n                                    onClick={() => this.props.onDeleteEvetClicked(this.props.eventHistory)}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </Col>\r\n                           \r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default PostEventHistory;","import React, { Component } from 'react';\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport CreateEvent from './createevent';\r\nimport SortAndSearch from './sortAndSearch'\r\nimport PostEventHistory from './posteventhist'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateEventContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = {\r\n            isLoggedin,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            dateToDisplay: '',\r\n            estPrice: 0,\r\n            description: '',\r\n            eventId: 0,\r\n            isUpdate: false,\r\n            updateItemId: 0,\r\n            searchTerm: '',\r\n            searchBy: 'fromAddress',\r\n            isValidated: false,\r\n            sortyBy:'id',\r\n            eventHistoryToDisplay: [\r\n                { id: 7, eventTypeVal: 'fj', fromAddress: 'Halifax', toAddress: 'India',dateToDisplay:\"07/23/2020\", seats: 2, estPrice: 100, description: 'Hello' }\r\n            ],\r\n            eventHistory: [{ id: 7, eventTypeVal: 'fj', fromAddress: 'Halifax', toAddress: 'India',dateToDisplay:\"07/23/2020\", seats: 2, estPrice: 100, description: 'Hello' }]\r\n        }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        console.log(form.checkValidity())\r\n        if (form.checkValidity() === false) {\r\n            this.setState({isValidated: true})\r\n            event.stopPropagation();\r\n            \r\n        }\r\n\r\n        else {\r\n            if (this.state.isUpdate) {\r\n                const { eventHistory, updateItemId } = this.state;\r\n                console.log(updateItemId)\r\n                eventHistory.map(item => {\r\n                    if (item.id === this.state.updateItemId) {\r\n                        item.eventTypeVal = this.state.eventTypeVal;\r\n                        item.fromAddress = this.state.fromAddress;\r\n                        item.toAddress = this.state.toAddress;\r\n                        item.seats = this.state.seats;\r\n                        item.estPrice = this.state.estPrice;\r\n                        item.dateToDisplay = this.state.dateToDisplay;\r\n                        item.description = this.state.description;\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                let id = this.state.eventId + 1;\r\n\r\n                this.setState({ eventId: id })\r\n                let newItem1 = {\r\n                    id: this.state.eventId,\r\n                    eventTypeVal: this.state.eventTypeVal,\r\n                    fromAddress: this.state.fromAddress,\r\n                    toAddress: this.state.toAddress,\r\n                    seats: this.state.seats,\r\n                    estPrice: this.state.estPrice,\r\n                    dateToDisplay: this.state.dateToDisplay,\r\n                    description: this.state.description\r\n                };\r\n        \r\n                this.state.eventHistory.push(newItem1);\r\n\r\n            }\r\n        \r\n            this.setState({\r\n                eventHistory: this.state.eventHistory,\r\n                eventHistoryToDisplay: this.state.eventHistory,\r\n                eventTypeVal: '',\r\n                fromAddress: '',\r\n                toAddress: '',\r\n                seats: 0,\r\n                journeyDate: '',\r\n                dateToDisplay: '',\r\n                estPrice: 0,\r\n                description: '',\r\n                isUpdate: false,\r\n                isValidated: false\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onNumInputChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value >= 0) {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    onDescriptionEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length <= 100) {\r\n            console.log(value.length)\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onEventddChange = (event) => {\r\n        this.setState({ eventTypeVal: event.target.value })\r\n        \r\n    }\r\n\r\n    handleDateChange = date => {\r\n        console.log(date)\r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate: date,\r\n                dateToDisplay: dateString\r\n            });\r\n        \r\n    };\r\n\r\n    onPostedEvetClicked = (history) => {\r\n        console.log(history)\r\n        const { id, eventTypeVal, fromAddress, toAddress, seats, estPrice, dateToDisplay, description } = history;\r\n        let dateToDisplay1 = dateToDisplay == undefined || dateToDisplay.length == 0 ? \"\" : new Date(dateToDisplay);\r\n        \r\n        this.setState({\r\n            eventTypeVal: eventTypeVal,\r\n            fromAddress: fromAddress,\r\n            toAddress: toAddress,\r\n            seats: seats,\r\n            estPrice: estPrice,\r\n            dateToDisplay: dateToDisplay,\r\n            journeyDate: dateToDisplay1,\r\n            description: description,\r\n            isUpdate: true,\r\n            updateItemId: id\r\n        });\r\n    }\r\n\r\n    onSearchTermChange = (event) => {\r\n\r\n        console.log(event.target.value)\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        const searchBy = this.state.searchBy;\r\n        let filteredEventHistory = '';\r\n        if (value.length > 0) {\r\n            filteredEventHistory = this.state.eventHistory.filter(item => item[searchBy].toString().toLowerCase().indexOf(value.toString().toLowerCase()) != -1);\r\n        }\r\n        else {\r\n            filteredEventHistory = this.state.eventHistory;\r\n        }\r\n        console.log(filteredEventHistory)\r\n        this.setState({ eventHistoryToDisplay: filteredEventHistory });\r\n    }\r\n\r\n    onSearchByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSortByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        let { eventHistoryToDisplay } = this.state\r\n        eventHistoryToDisplay.sort((a, b) => (a[value] > b[value]) ? 1 : -1);\r\n        this.setState({ eventHistoryToDisplay: eventHistoryToDisplay });\r\n    }\r\n\r\n    onDeleteEvetClicked = (history) => {\r\n        let { eventHistory } = this.state\r\n        console.log(history.id)\r\n        let filteredevents = eventHistory.filter(item => item.id != history.id);\r\n        this.setState({ eventHistory: filteredevents, eventHistoryToDisplay: filteredevents });\r\n    }\r\n\r\n    renderPostEventHistory = () => {\r\n        return (\r\n            this.state.eventHistoryToDisplay.length > 0 ?\r\n                this.state.eventHistoryToDisplay.map(item => <PostEventHistory\r\n                    key={item.id}\r\n                    eventHistory={item}\r\n                    onPostedEvetClicked={this.onPostedEvetClicked}\r\n                    onDeleteEvetClicked={this.onDeleteEvetClicked} />) :\r\n                <div>No items to display</div>);\r\n    };\r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div >\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <CreateEvent\r\n                            mySubmitHandler={this.mySubmitHandler}\r\n                            onFromToEnter={this.onFromToEnter}\r\n                            onNumInputChange={this.onNumInputChange}\r\n                            onEventddChange={this.onEventddChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            onDescriptionEnter = {this.onDescriptionEnter}\r\n                            \r\n                            eventTypeVal={this.state.eventTypeVal}\r\n                            fromAddress={this.state.fromAddress}\r\n                            toAddress={this.state.toAddress}\r\n                            seats={this.state.seats}\r\n                            journeyDate={this.state.journeyDate}\r\n                            estPrice={this.state.estPrice}\r\n                            description={this.state.description}\r\n                            isUpdate={this.state.isUpdate}\r\n                            isValidated={this.state.isValidated}\r\n                            isCreate={true}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <br/>\r\n                        <Row>\r\n                            <SortAndSearch\r\n                                onSearchTermChange={this.onSearchTermChange}\r\n                                onSearchByChange={this.onSearchByChange}\r\n                                onSortByChange={this.onSortByChange}\r\n                                searchTerm={this.state.searchTerm}\r\n                                searchBy={this.state.searchBy}\r\n                                sorthBy={this.state.sorthBy}\r\n                                isCreate={true}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                            {this.renderPostEventHistory()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default CreateEventContainer;","import React, { Component } from 'react';\r\nimport { Button, Row, Col, Card,Alert } from \"react-bootstrap\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { FcOk } from \"react-icons/fc\";\r\n\r\nclass SubReqDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            status: ''\r\n         }\r\n    }\r\n\r\n    onClickInfo = () => {\r\n        \r\n    }\r\n\r\n    onClickAccept = () => {\r\n        this.setState({status:\"accept\"})\r\n    }\r\n\r\n    onClickReject = () => {\r\n        this.setState({status:\"reject\",showAlert:true})\r\n    }\r\n\r\n    render() { \r\n        let icon = ''\r\n        if (this.state.status == \"accept\") {\r\n            icon = <div><FcOk /> <span style={{fontStyle: \"italic\"}}>Accepted </span></div>\r\n        }\r\n        else if (this.state.status == \"reject\") {\r\n            icon = <div><BsFillXCircleFill style={{color:\"#dc3545\"}}/> <span style={{fontStyle: \"italic\"}}>Rejected </span></div>\r\n        }\r\n        else {\r\n            icon=<span style={{fontStyle: \"italic\"}}>No action taken </span>\r\n        }\r\n\r\n\r\n        return (<div>\r\n            <br />\r\n            <Card border=\"secondary\">\r\n    \r\n                <Card.Body style={{ backgroundColor: \"#c3c6d8\" }}>\r\n      \r\n                    <Row  md={3} sm={2} xs={1}>\r\n                        <Col>\r\n                            <Button className=\"btn btn-info\" type=\"button\"\r\n                                onClick={this.onClickInfo}>\r\n                                Requester\r\n                    </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"btn btn-success\" type=\"button\"\r\n                                onClick={this.onClickAccept}>\r\n                                Accept\r\n                    </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"btn btn-danger\" type=\"button\"\r\n                                onClick={this.onClickReject}>\r\n                                Reject\r\n                    </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\"> {icon}</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n            \r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default SubReqDetails;","import React, { Component } from 'react';\r\nimport { Card,Accordion,Button,Row,Col } from \"react-bootstrap\";\r\nimport SubReqDetails from './subReqDetails'\r\n\r\nclass RequestMainCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        return (<div>\r\n            <Accordion>\r\n                <Card border=\"secondary\" >\r\n                    <Card.Header style={{padding:\"0\"}}>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                            Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                            Description: <strong>{this.props.eventDetail.description}</strong>\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            {this.props.eventDetail.requests.map(item => <SubReqDetails\r\n                                key={item.requestId}\r\n                            />)}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\"> {this.props.eventDetail.requests.length} Requests for this event</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">updated 3 days ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n                </Card>\r\n            </Accordion>\r\n            <br />\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default RequestMainCard;","import React, { Component } from 'react';\r\nimport ReqMainCard from './requestMainCard'\r\n\r\n\r\nclass RequestsReceived extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            eventDetails: [\r\n                {\r\n                    eventDetailId: 1, fromAddress: \"Halifax\", toAddress: \"Toronto\", dateToDisplay: \"07/02/2020\", seats: 4, estPrice: 200, description: \"sample desc\",\r\n                    requests: [\r\n                        { eventDetailId: 1, requestId: 1 },\r\n                        { eventDetailId: 1, requestId: 2 }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 2, fromAddress: \"Toronto\", toAddress: \"Quebic\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",\r\n                    requests: [\r\n                        { eventDetailId: 2, requestId: 10 }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 3, fromAddress: \"Halifax\", toAddress: \"PEI\", dateToDisplay: \"09/12/2020\", seats: 3, estPrice: 100, description: \"car details\",\r\n                    requests: [\r\n                        { eventDetailId: 3, requestId: 11 },\r\n                        { eventDetailId: 3, requestId: 12 },\r\n                        { eventDetailId: 3, requestId: 13 }\r\n                    ]\r\n                }\r\n            ]\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h5>Requests received for posted events</h5>\r\n                {this.state.eventDetails.map(item =>\r\n                    <ReqMainCard\r\n                        key={item.eventDetailId}\r\n                        eventDetail = {item}\r\n                    />)}\r\n                \r\n            </div>\r\n         );\r\n    } \r\n}\r\n \r\nexport default RequestsReceived;","import React, { Component } from 'react';  \r\nimport FindEvent from './notfications/requestsReceived'\r\nimport CreateEvent from './createevent'\r\nimport SortAndSearch from './sortAndSearch'\r\nimport PostEventHistory from './posteventhist'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass FindEventContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = { \r\n            isLoggedin,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            journeyDate2: '',\r\n            dateToDisplay: '',\r\n            dateToDisplay2: '',\r\n            estPrice: 0,\r\n            description: '',\r\n            eventId: 0,\r\n            updateItemId: 0,\r\n            searchTerm: '',\r\n            searchBy: 'fromAddress',\r\n            isValidated: false,\r\n            sortyBy:'id',\r\n            searchResults: [],\r\n            searchResultsToDisplay:[],\r\n            eventsHistory: [\r\n                { id: 7, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/02/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 11, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/03/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id:12, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/05/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 13, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 8, eventTypeVal: 'cj', fromAddress: 'Toronto', toAddress: 'Vancour', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 9, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'PEI', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 10, eventTypeVal: 'cj', fromAddress: 'India', toAddress: 'Toronto', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' }\r\n            ],\r\n            \r\n         }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { id, eventTypeVal, fromAddress, toAddress, seats, estPrice, dateToDisplay,dateToDisplay2 } = this.state;\r\n        let { eventsHistory } = this.state;\r\n        let isFiltered = false;\r\n        if (eventsHistory.length > 0) {\r\n            if (eventTypeVal.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['eventTypeVal'].toLowerCase() == eventTypeVal.toLowerCase());\r\n                isFiltered = true;\r\n            }\r\n            if (fromAddress.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['fromAddress'].toLowerCase() == fromAddress.toLowerCase());\r\n                isFiltered = true;\r\n            }\r\n            if (toAddress.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['toAddress'].toLowerCase() == toAddress.toLowerCase());\r\n                isFiltered = true;\r\n            } \r\n            if (dateToDisplay.length > 0 && dateToDisplay2.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['dateToDisplay'] >= dateToDisplay && item['dateToDisplay'] <= dateToDisplay2);\r\n                isFiltered = true;\r\n            }\r\n            else if (dateToDisplay.length > 0) {\r\n                console.log(dateToDisplay)\r\n                eventsHistory = eventsHistory.filter(item => item['dateToDisplay'] == dateToDisplay);\r\n                isFiltered = true;\r\n            }\r\n        }\r\n        if (!isFiltered) {\r\n            eventsHistory = [];\r\n        }\r\n        console.log(eventsHistory);\r\n\r\n        this.setState({\r\n            searchResults: eventsHistory,\r\n            searchResultsToDisplay:eventsHistory,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            dateToDisplay: '',\r\n            journeyDate2: '',\r\n            dateToDisplay2: '',\r\n            estPrice: 0,\r\n            isValidated: false\r\n        });\r\n\r\n\r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onDescriptionEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length <= 100) {\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onEventddChange = (event) => {\r\n        this.setState({ eventTypeVal: event.target.value })\r\n        \r\n    }\r\n\r\n    handleDateChange = date => {\r\n        \r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate: date,\r\n                dateToDisplay: dateString,\r\n                \r\n            });\r\n        \r\n    };\r\n\r\n    handleDateChange2 = date => {\r\n        \r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate2: date,\r\n                dateToDisplay2: dateString\r\n            });\r\n        \r\n    };\r\n\r\n    onPostedEvetClicked = (history) => {\r\n        \r\n    }\r\n\r\n    onSearchTermChange = (event) => {\r\n\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        const searchBy = this.state.searchBy;\r\n        let filteredsearchResults = '';\r\n        if (value.length > 0) {\r\n            filteredsearchResults = this.state.searchResults.filter(item => item[searchBy].toString().toLowerCase().indexOf(value.toString().toLowerCase()) != -1);\r\n        }\r\n        else {\r\n            filteredsearchResults = this.state.searchResults;\r\n        }\r\n        this.setState({ searchResultsToDisplay: filteredsearchResults });\r\n    }\r\n\r\n    onSearchByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSortByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        let { searchResultsToDisplay } = this.state\r\n        searchResultsToDisplay.sort((a, b) => (a[value] > b[value]) ? 1 : -1);\r\n        this.setState({ searchResultsToDisplay: searchResultsToDisplay });\r\n    }\r\n\r\n    onDeleteEvetClicked = (history) => {\r\n        let { searchResultsToDisplay } = this.state\r\n        let filteredevents = searchResultsToDisplay.filter(item => item.id != history.id);\r\n        this.setState({ searchResultsToDisplay: filteredevents });\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        return (\r\n            this.state.searchResultsToDisplay.length > 0 ?\r\n                this.state.searchResultsToDisplay.map(item => <PostEventHistory\r\n                    key={item.id}\r\n                    eventHistory={item}\r\n                    onPostedEvetClicked={this.onPostedEvetClicked}\r\n                    onDeleteEvetClicked={this.onDeleteEvetClicked} />) :\r\n                <div>No items to display</div>);\r\n    }\r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <CreateEvent\r\n                            mySubmitHandler={this.mySubmitHandler}\r\n                            onFromToEnter={this.onFromToEnter}\r\n                            onEventddChange={this.onEventddChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            handleDateChange2={this.handleDateChange2}\r\n                            onDescriptionEnter={this.onDescriptionEnter}\r\n                        \r\n                            eventTypeVal={this.state.eventTypeVal}\r\n                            fromAddress={this.state.fromAddress}\r\n                            toAddress={this.state.toAddress}\r\n                            seats={this.state.seats}\r\n                            journeyDate={this.state.journeyDate}\r\n                            journeyDate2={this.state.journeyDate2}\r\n                            estPrice={this.state.estPrice}\r\n                            description={this.state.description}\r\n                            isValidated={this.state.isValidated}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <br />\r\n                        <Row>\r\n                            <SortAndSearch\r\n                                onSearchTermChange={this.onSearchTermChange}\r\n                                onSearchByChange={this.onSearchByChange}\r\n                                onSortByChange={this.onSortByChange}\r\n                                searchTerm={this.state.searchTerm}\r\n                                searchBy={this.state.searchBy}\r\n                                sorthBy={this.state.sorthBy} />\r\n                        </Row>\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                            {this.renderSearchResults()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default FindEventContainer;","import React, { Component } from 'react';\r\nimport { Card, Accordion, Button, Row, Col } from \"react-bootstrap\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { FcOk } from \"react-icons/fc\";\r\nimport { MdHourglassFull } from \"react-icons/md\";\r\n\r\nclass ResponseMainCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    renderHeader = () => {\r\n        if (this.props.eventDetail.status == 1) {\r\n            return (<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                            Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                            Description: <strong>{this.props.eventDetail.description}</strong>\r\n            </Accordion.Toggle>)\r\n        }\r\n        else {\r\n            return <button type=\"button\" className=\"btn\" style={{cursor:\"auto\"}}>\r\n            From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                        Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                        Description: <strong>{this.props.eventDetail.description}</strong>\r\n        </button>\r\n        }\r\n    }\r\n\r\n    renderFooterText = () => {\r\n        if (this.props.eventDetail.status == 1) {\r\n            return <div><FcOk /> <span style={{fontStyle: \"italic\"}}>Accepted </span></div>\r\n        }\r\n        else if (this.props.eventDetail.status == 0) {\r\n            return <div><BsFillXCircleFill style={{color:\"#dc3545\"}}/> <span style={{fontStyle: \"italic\"}}>Rejected </span></div>\r\n        }\r\n        else {\r\n            return <div><MdHourglassFull style={{color:\"#ed9106\"}}/> <span style={{fontStyle: \"italic\"}}>pending </span></div>\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (<div>\r\n            <Accordion>\r\n            <Card border=\"secondary\" >\r\n                    <Card.Header  style={{padding:\"0\"}}>\r\n                        \r\n                    {this.renderHeader()}\r\n                        \r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            event owner details to contact...\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\">  {this.renderFooterText()}</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">updated 3 days ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n                </Card>\r\n                </Accordion>\r\n            <br/>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ResponseMainCard;","import React, { Component } from 'react';\r\nimport ResponseMainCard from './responseMainCard'\r\n\r\nclass ResponsesReceived extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            eventDetails: [\r\n                {\r\n                    eventDetailId: 1, fromAddress: \"Halifax\", toAddress: \"Moncton\", dateToDisplay: \"07/02/2020\", seats: 4, estPrice: 200, description: \"sample desc\",status:0\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 2, fromAddress: \"Moncton\", toAddress: \"Halifax\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",status:1\r\n                },\r\n                ,\r\n\r\n                {\r\n                    eventDetailId: 3, fromAddress: \"Moncton\", toAddress: \"Quebic\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",status:-1\r\n                }\r\n            ]\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h5>Responses received for requested events</h5>\r\n                {this.state.eventDetails.map(item =>\r\n                    <ResponseMainCard\r\n                        key={item.eventDetailId}\r\n                        eventDetail = {item}\r\n                    />)}\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ResponsesReceived;","import React, { Component } from 'react';\r\nimport RequestsReceived from './notfications/requestsReceived'\r\nimport ResponsesReceived from './notfications/responsesReceived'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = { \r\n            isLoggedin\r\n         }\r\n    } \r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div>\r\n            <Container>\r\n            <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <RequestsReceived />\r\n                    </Col>\r\n                    <Col>\r\n                        <ResponsesReceived />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport { Row,Col,Container } from \"react-bootstrap\";\r\n \r\nfunction ErrorPage() {\r\n  const greeting = 'Hello Function Component!';\r\n \r\n    return (\r\n        <div style={{paddingTop:\"10%\"}}>\r\n            <Container>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <h1 style={{color:\"#013b75\"}}>404</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                <span style={{color:\"#013b75\"}}>The page you are looking for doesn't exist on the server</span>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <span style={{color:\"#013b75\"}}>Please select items from the navbar</span>\r\n                </Row>\r\n                </Container>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n \r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport NavbarHeader from './navbarHeader'\r\nimport createeventContainer from './createeventContainer'\r\nimport FindEventContainer from './findeventContainer'\r\nimport home from './home'\r\nimport Error from './errorpage'\r\nimport './events.css';\r\n\r\nimport { Route,Switch  } from \"react-router-dom\";\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Container,Row} from \"react-bootstrap\";\r\n\r\nclass NavbarTemplate extends Component {\r\n    state = {  }\r\n    render() {        \r\n       \r\n\r\n        return (\r\n            \r\n            <div>\r\n                <div>\r\n                    <NavbarHeader />\r\n                </div>\r\n                \r\n                <div className=\"content\" style={{ overflow: \"auto\", height: \"100%\" }} >\r\n                    <Switch>\r\n                    <Route exact path=\"/\" component={home} />\r\n                    <Route exact path=\"/createevent\" component={createeventContainer}></Route>\r\n                    <Route exact path=\"/findevent\" component={FindEventContainer}></Route>\r\n                    <Route exact path=\"/home\" component={home}></Route>\r\n                    <Route exact path=\"/*\" component={Error} />\r\n                  \r\n                    </Switch>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavbarTemplate;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route,Switch } from \"react-router-dom\";\r\nimport LoginAndReg from './Raj/components/loginReg';\r\nimport {FooterCus} from './Jigar/Components/Footer/Footer';\r\n\r\nimport NavbarTemplate from './Raj/components/navbarTemplate'\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/login\" component={LoginAndReg}></Route>\r\n        <Route component={NavbarTemplate} />\r\n    </Switch>\r\n      <FooterCus />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.b6440551.png\";"],"sourceRoot":""}