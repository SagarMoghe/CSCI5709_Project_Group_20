{"version":3,"sources":["Jigar/Components/Images/A2FooterFb.png","Jigar/Components/Images/A2FooterInsta.png","Jigar/Components/Images/A2FooterTwitter.png","Raj/images/logo.png","serviceWorker.js","Raj/components/login.jsx","Raj/components/register.jsx","Raj/components/description.jsx","Raj/components/loginReg.jsx","Jigar/Components/Footer/Footer.jsx","Jigar/Components/Validation/ValidateProperties.js","Jigar/Components/Validation/ErrorMsg.js","Jigar/Components/ForgotPasword/ForgotPassword.jsx","Jigar/Components/Feedback/Feeback.jsx","Raj/components/navbarHeader.jsx","Raj/components/createevent.jsx","Raj/components/sortAndSearch.jsx","Raj/components/posteventhist.jsx","Raj/components/createeventContainer.jsx","Raj/components/notfications/subReqDetails.jsx","Raj/components/notfications/requestMainCard.jsx","Raj/components/notfications/requestsReceived.jsx","Raj/components/findeventContainer.jsx","Raj/components/notfications/responseMainCard.jsx","Raj/components/notfications/responsesReceived.jsx","Raj/components/home.jsx","Raj/components/errorpage.jsx","Raj/components/navbarTemplate.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Login","props","mySubmitHandler","event","preventDefault","state","username","password","length","sessionStorage","setItem","setState","isLoggedIn","isInvalidCred","onFieldChange","usr","target","name","val","value","this","to","errMsg","style","fontStyle","color","fontWeight","Navbar","className","Col","Brand","href","src","logo","alt","height","maxWidth","matches","fontFamily","fontSize","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Control","type","placeholder","onChange","paddingLeft","Button","variant","Component","Register","onFromToEnter","onPasswordEnter","invalidPwd","onEmailEnter","test","String","toLowerCase","invalidEmail","handleDateChange","date","dob","onGenderChange","genderVal","form","currentTarget","console","log","checkValidity","stopPropagation","isValid","validated","email","pwdbstyle","emailbstyle","errMsgPwd","errMsgEmail","Container","width","backgroundColor","borderRadius","noValidate","required","selected","Description","myStyle","myStyleSpan","lg","LoginAndReg","FooterCus","Footer","classname","bg","expand","sticky","Toggle","aria-controls","Collapse","Nav","Link","fb","id","class","insta","twit","Date","getFullYear","validateEmail","isEmailValid","error","validateForm","ErrorMsg","valid","message","ForgotPassword","redirectToLogin","history","push","redirectToResetPassword","isFormValid","resetLinkSent","e","alert","align","htmlFor","updateEmail","disabled","onClick","bind","Feedback","redirectToHome","feedbackSubmitted","feedback","updateProperties","NavbarHeader","onButtonClick","isLoggedin","clear","isLogoutClicked","getItem","signinText","buttonText","exact","activeClassName","CreateEvent","renderByEventdd","etype","eventTypeVal","rengerOptionalinLabel","seats","onNumInputChange","InputGroup","Prepend","Text","aria-describedby","estPrice","renderDescription","isCreate","description","onDescriptionEnter","renderDateRange","journeyDate2","handleDateChange2","isUpdate","hedingText","isValidated","onEventddChange","fromAddress","toAddress","journeyDate","paddingBottom","SortAndSearch","header","searchBy","onSearchByChange","searchTerm","onSearchTermChange","sortyBy","onSortByChange","PostEventHistory","toggleHover","hover","toggleHoverDelete","hoverDelete","cursor","borderStyle","borderColor","background","onMouseEnter","onMouseLeave","onPostedEvetClicked","eventHistory","wordWrap","dateToDisplay","aria-label","onDeleteEvetClicked","aria-hidden","CreateEventContainer","updateItemId","map","item","eventId","newItem1","eventHistoryToDisplay","dateString","x","toString","split","index","indexOf","dateToDisplay1","undefined","filteredEventHistory","filter","sort","a","b","filteredevents","renderPostEventHistory","key","sorthBy","SubReqDetails","onClickInfo","onClickAccept","status","onClickReject","showAlert","icon","Card","border","Body","md","xs","RequestMainCard","Accordion","Header","padding","eventKey","eventDetail","requests","requestId","RequestsReceived","eventDetails","eventDetailId","FindEventContainer","dateToDisplay2","eventsHistory","isFiltered","searchResults","searchResultsToDisplay","filteredsearchResults","renderSearchResults","ResponseMainCard","renderHeader","renderFooterText","ResponsesReceived","Home","ErrorPage","paddingTop","NavbarTemplate","overflow","path","component","home","createeventContainer","Error","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.93de8b79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/A2FooterFb.465faff2.png\";","module.exports = __webpack_public_path__ + \"static/media/A2FooterInsta.7742981d.png\";","module.exports = __webpack_public_path__ + \"static/media/A2FooterTwitter.0452ac38.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.b6440551.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport MediaQuery from 'react-responsive'\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './events.css';\r\nimport logo from '../images/logo.png'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLoggedIn: false,\r\n            isInvalidCred:false\r\n        }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n\r\n        if (username.length > 0 && password.length > 0) {\r\n            sessionStorage.setItem( \"username\", username );\r\n            this.setState({ isLoggedIn: true, isInvalidCred: false });\r\n        }\r\n        else {\r\n            this.setState({isInvalidCred:true})\r\n        }\r\n    }\r\n\r\n    onFieldChange = (event) => {\r\n        let usr = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [usr]: val });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n\r\n        let errMsg = this.state.isInvalidCred ? <span style={{ fontStyle: \"italic\", color:\"#dc3545\" }}><span style={{fontWeight:\"bold\"}}>Invalid username or password</span></span> : null;\r\n        return (\r\n            <Navbar className=\"navbg\">\r\n                <Col >\r\n                    <Navbar.Brand href=\"login\">\r\n\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"135px\" }} />\r\n\r\n\r\n\r\n                        <MediaQuery  maxWidth=\"690px\" >\r\n\r\n                            {(matches) =>\r\n                                matches\r\n                                    ? null\r\n                                    : <strong style={{ fontFamily: \"unset\", fontSize: \"xxx-large\" }}>EventGo</strong>\r\n                            }\r\n                        </MediaQuery>\r\n\r\n\r\n                    </Navbar.Brand>\r\n                </Col>\r\n                <Col >\r\n\r\n                    <Form onSubmit={this.mySubmitHandler} className=\"loginForm\">\r\n\r\n                        <Form.Group as={Row} controlId=\"usr\">\r\n                            <Form.Label column sm=\"3.5\" className=\"loginLabel\" style={{ color: \"white\" }}>Username:</Form.Label>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                              name=\"username\"\r\n                                              value={this.state.username}\r\n                                              onChange={this.onFieldChange}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"pwd\">\r\n                            <Form.Label column sm=\"3.5\" className=\"loginLabel\" style={{ color: \"white\" }}>Password:</Form.Label>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control type=\"password\" placeholder=\"\"\r\n                                              name=\"password\"\r\n                                              value={this.state.password}\r\n                                              onChange={this.onFieldChange}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <div style={{ paddingLeft: \"27%\" }}>\r\n                            <Row>\r\n                                <Col sm=\"2\">\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Login\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col>\r\n                                    <a href=\"/forgotpassword\">Forgot Password?</a>\r\n                                </Col>\r\n                                <Col>\r\n                                    {errMsg}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './events.css'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dob: '',\r\n            genderVal: '',\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            validated: false,\r\n            invalidPwd: false,\r\n            invalidEmail: false,\r\n            isValid:false\r\n\r\n        }\r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onPasswordEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length > 4) {\r\n            this.setState({ invalidPwd: false });\r\n        }\r\n        else {\r\n            this.setState({ invalidPwd: true });\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onEmailEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (re.test(String(value).toLowerCase())) {\r\n            this.setState({ invalidEmail: false });\r\n        }\r\n        else {\r\n            this.setState({ invalidEmail: true });\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n            dob: date\r\n        });\r\n    };\r\n\r\n    onGenderChange = (event) => {\r\n        this.setState({ genderVal: event.target.value })\r\n\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        const form = event.currentTarget;\r\n        const { invalidPwd, invalidEmail, username } = this.state;\r\n        console.log(invalidPwd,invalidEmail)\r\n        if (form.checkValidity() === false || invalidPwd || invalidEmail) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            sessionStorage.setItem( \"username\", username );\r\n            this.setState({ isValid: true });\r\n        }\r\n\r\n        this.setState({ validated: true });\r\n    };\r\n\r\n    render() {\r\n\r\n        const myBordeSrtyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n\r\n        }\r\n\r\n        let pwdbstyle = this.state.invalidPwd ? \"invalidValuebStyle\" : \"validValuebStyle\";\r\n        let emailbstyle = this.state.invalidEmail ? \"invalidValuebStyle\" : \"validValuebStyle\";\r\n        let errMsgPwd = this.state.invalidPwd ? <span style={{ fontStyle: \"italic\" }}><small className=\"text-muted\" >Password must be atleast 5 Characters long</small></span> : null;\r\n        let errMsgEmail = this.state.invalidEmail ? <span style={{fontStyle: \"italic\"}}><small  className=\"text-muted\" >Please enter a valid email address</small></span> : null;\r\n\r\n        if (this.state.isValid) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n        return (\r\n            <div style={{height:\"100%\"}}>\r\n                <br/>\r\n                <Col style={{height:\"100%\"}}>\r\n                    <Container style={myBordeSrtyle}>\r\n                        <h2>Create new account</h2>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={this.mySubmitHandler}>\r\n\r\n                            <Form.Group as={Row} controlId=\"usrname\">\r\n                                <Form.Label column sm=\"3.5\" className=\"loginLabel\">Username:</Form.Label>\r\n                                <Col sm=\"5\">\r\n                                    <Form.Control type=\"text\" placeholder=\"\"\r\n                                                  name=\"username\"\r\n                                                  value={this.state.username}\r\n                                                  onChange={this.onFromToEnter}\r\n                                                  required\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group as={Row} controlId=\"pwd\">\r\n                                <Form.Label column sm=\"3.5\"  className=\"loginLabel\">Password:</Form.Label>\r\n                                <Col sm=\"5\">\r\n                                    <Form.Control type=\"password\" placeholder=\"\"\r\n                                                  name=\"password\" className={pwdbstyle}\r\n                                                  value={this.state.password}\r\n                                                  onChange={this.onPasswordEnter}\r\n                                                  required\r\n                                    />\r\n\r\n                                </Col>\r\n                                <Col>\r\n                                    {errMsgPwd}\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"em\">\r\n                                <Form.Label column sm=\"3.5\" className=\"loginLabel\">Email:</Form.Label>\r\n                                <Col sm=\"5\">\r\n                                    <Form.Control type=\"text\" placeholder=\"\"\r\n                                                  name=\"email\"\r\n                                                  value={this.state.email}\r\n                                                  onChange={this.onEmailEnter}\r\n                                                  required\r\n                                                  className={emailbstyle}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    {errMsgEmail}\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"date\">\r\n                                <Form.Label column sm=\"3.5\" className=\"loginLabel\">Date of birth:</Form.Label>\r\n                                <Col sm=\"5\">\r\n                                    <DatePicker className=\"calenderpicker form-control\"\r\n                                                selected={this.state.dob}\r\n                                                onChange={this.handleDateChange}\r\n                                                value={this.state.dob}\r\n                                                required\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"gender\">\r\n                                <Form.Label column sm=\"3.5\" className=\"loginLabel\">Gender:</Form.Label>\r\n                                <Col sm=\"5\">\r\n                                    <Form.Control as=\"select\" value={this.state.genderVal} onChange={this.onGenderChange} required>\r\n                                        <option value=''>Choose...</option>\r\n                                        <option value=\"ma\">Male</option>\r\n                                        <option value=\"fe\">Female</option>\r\n                                        <option value=\"ot\">Other</option>\r\n\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div style={{ paddingLeft: \"27%\"}}>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Container>\r\n                </Col>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport logo from '../images/logo.png'\r\n\r\nclass Description extends Component {\r\n    state = {  }\r\n    render() { \r\n        const myStyle = {\r\n            fontFamily: \"cursive\"\r\n            \r\n        }\r\n        const myStyleSpan = {\r\n            color: \"#035fbb\"\r\n            \r\n        }\r\n        const myBordeSrtyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        return (<div style={{\"height\":\"100%\"}}>\r\n            <br />\r\n            <Col style={{\"height\":\"100%\"}}>\r\n            <Container style={myBordeSrtyle}>\r\n                    \r\n                    <h2>Why EventGo</h2>\r\n               \r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>EventGo</span> is a platform to connect various travellers or tourists travelling from a\r\ncommon point of origin to the same destination</h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Long distance travelling</span> Post and Request any kind of event anywhere across the globe  </h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Signup for free</span> Event Creators and Event Requestor don't pay any registration fee or membership fee </h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Make Connections</span> Sharing travelling plans is a great way to make new friends </h6>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Description;","import React, { Component } from 'react';  \r\nimport Login from './login'\r\nimport Register from './register'\r\nimport Description from './description'\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\nclass LoginAndReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                \r\n                <Login />\r\n                \r\n                <Row style={{width:\"100%\"}}>\r\n                    <Col >\r\n                        <Description />\r\n                    </Col>\r\n                    <Col >\r\n                        <Register />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginAndReg;","import React, {Component} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {Footer} from \"react-materialize\";\r\nimport './Footer.css';\r\nimport fb from \"../Images/A2FooterFb.png\";\r\nimport insta from \"../Images/A2FooterInsta.png\";\r\nimport twit from \"../Images/A2FooterTwitter.png\";\r\n\r\nexport class FooterCus extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <footer className={Footer}>\r\n                <section>\r\n                    <br/>\r\n                    <Navbar classname=\"footer\" bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"bottom\" >\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse >\r\n                            <ul></ul><ul></ul><ul></ul><ul></ul><ul></ul>\r\n                            <ul></ul><ul></ul>\r\n                            <ul>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\" >About US</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">FAQs</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/feedback\">Feedback</Nav.Link>\r\n                            </ul>\r\n                            <ul></ul>\r\n                            <ul></ul>\r\n                            <ul></ul>\r\n                            <ul className=\"navbar-nav\">\r\n                                <Nav.Link className=\"footer-info\" href=\"https://www.facebook.com/\" >\r\n                                    <img\r\n                                        src={fb}\r\n                                        id=\"fb-link\"\r\n                                        class=\"img-fluid\"\r\n                                        width=\"50\"\r\n                                        height=\"50\"\r\n                                        alt=\"\"\r\n                                    /></Nav.Link>\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                <Nav.Link className=\"footer-info\" href=\"https://www.instagram.com/\" >\r\n                                    <img\r\n                                        src={insta}\r\n                                        id=\"insta-links\"\r\n                                        className=\"img-fluid\"\r\n                                        width=\"50\"\r\n                                        height=\"50\"\r\n                                        alt=\"\"/></Nav.Link>\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                <Nav.Link className=\"footer-info\" href=\"https://twitter.com/explore\" >\r\n                                    <img\r\n                                        src={twit}\r\n                                        id=\"twit-links\"\r\n                                        className=\"img-fluid\"\r\n                                        width=\"53\"\r\n                                        height=\"53\"\r\n                                        alt=\"\"/></Nav.Link>\r\n                            </ul>\r\n                            <ul></ul>\r\n                            <ul>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">Contact Us</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">Terms</Nav.Link>\r\n                                <Nav.Link className=\"footer-info\" href=\"/underimplementation\">Privacy Policy</Nav.Link>\r\n                            </ul>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </section>\r\n\r\n                <section>\r\n                    <Navbar bg=\"light\" variant=\"light\"expand=\"lg\" sticky=\"bottom\" >\r\n                        <ul className=\"navbar-nav mr-auto\" >\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            &copy; {new Date().getFullYear()} Copyright: <a href=\"/home\"> RideShare.com </a>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        </ul>\r\n                    </Navbar>\r\n                </section>\r\n            </footer>\r\n        );\r\n    }\r\n}","export function validateEmail() {\r\n    const {email} = this.state;\r\n    let isEmailValid = true;\r\n    let error = {...this.state.error}\r\n\r\n    // checks for email format _@_._\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)){\r\n        isEmailValid = false;\r\n        error.email = 'Please enter a valid email id'\r\n    }\r\n\r\n    this.setState({isEmailValid, error}, this.validateForm)\r\n}\r\n\r\nexport function validatePassword() {\r\n    const {password} = this.state;\r\n    let isPasswordValid = true;\r\n    let error = {...this.state.error}\r\n\r\n    // Password must contain at least 6 chars\r\n    // Password must contain at least one digit\r\n    // Password must contain at least one special character\r\n\r\n    if (password.length < 6) {\r\n        isPasswordValid = false;\r\n        error.password = 'Password must be at least 6 characters long';\r\n    } else if (!/\\d/.test(password)){\r\n        isPasswordValid = false;\r\n        error.password = 'Password must contain at least one digit';\r\n    } else if (!/[!@#$%^&*]/.test(password)){\r\n        isPasswordValid = false;\r\n        error.password = 'Password must contain at least one special character: !@#$%^&*';\r\n    }\r\n\r\n    this.setState({isPasswordValid, error}, this.validateForm);\r\n}\r\n\r\nexport function validateConfirmPassword() {\r\n    const {confirmPassword, password} = this.state;\r\n    let isConfirmPasswordValid = true;\r\n    let error = {...this.state.error}\r\n\r\n    if (password !== confirmPassword) {\r\n        isConfirmPasswordValid = false;\r\n        error.confirmPassword = 'Passwords do not match'\r\n    }\r\n\r\n    this.setState({isConfirmPasswordValid, error}, this.validateForm);\r\n}","import React from \"react\";\r\n\r\nexport function ErrorMsg(props) {\r\n    if (!props.valid) {\r\n        return(\r\n            <div className='error-msg'>{props.message}</div>\r\n        )\r\n    }\r\n    return null;\r\n}","import React, {Component} from 'react';\r\nimport './ForgotPassword.css';\r\nimport {validateEmail} from \"../Validation/ValidateProperties\";\r\nimport {ErrorMsg} from \"../Validation/ErrorMsg\";\r\nimport {Button, Col, Form, Navbar, Row} from \"react-bootstrap\";\r\nimport logo from \"../../../Raj/images/logo.png\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nexport class ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            error: {},\r\n            isEmailValid: false,\r\n            isFormValid: false,\r\n        }\r\n    }\r\n\r\n    redirectToLogin = () => {\r\n        this.props.history.push('/login');\r\n    }\r\n\r\n    redirectToResetPassword = () => {\r\n        this.props.history.push('/resetpassword');\r\n    }\r\n\r\n    updateEmail(name, value){\r\n        this.setState({[name]: value}, validateEmail);\r\n    }\r\n\r\n    validateForm = () => {\r\n        const {isEmailValid} = this.state;\r\n        this.setState({\r\n            isFormValid: (isEmailValid)\r\n        })\r\n    }\r\n\r\n    resetLinkSent = (e) => {\r\n        e.preventDefault();\r\n        console.log('Function called');\r\n        this.setState({\r\n            email: \"\",\r\n            error: {},\r\n            isEmailValid: false,\r\n            isFormValid: false,\r\n        })\r\n        alert(\"Here dialog with below confirmation will be implemented\\n Password Reset Link Sent!\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Forgot Passsowrd called!\");\r\n        return (\r\n            <section >\r\n                <header>\r\n                    <Navbar className=\"navbg\">\r\n                        <Col align=\"center\">\r\n                            <Navbar.Brand href=\"login\">\r\n                                <img src={logo} alt=\"logo\" style={{ height: \"135px\" }} />\r\n                                <MediaQuery  maxWidth=\"500px\" >\r\n                                    {(matches) =>\r\n                                        matches\r\n                                            ? null\r\n                                            : <strong style={{ fontFamily: \"unset\", fontSize: \"xxx-large\" }}>EventGo</strong>\r\n                                    }\r\n                                </MediaQuery>\r\n                            </Navbar.Brand>\r\n                        </Col>\r\n                    </Navbar>\r\n                </header>\r\n\r\n            <Col align=\"center\" >\r\n                <br/>\r\n                <header className=\"header\" align=\"center\">\r\n                    <h3>Forgot Password</h3>\r\n                </header>\r\n                <section className=\"card forgot-password-card\">\r\n                    <form className=\"form\" >\r\n                        <br/>\r\n                        <section className=\"form-group text-left\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                            <input type=\"email\"\r\n                                   className=\"form-control\"\r\n                                   id=\"email\"\r\n                                   placeholder=\"Enter your email address\"\r\n                                   value={this.state.email}\r\n                                   onChange={(e) =>\r\n                                       this.updateEmail('email',e.target.value)}\r\n                            />\r\n                            <ErrorMsg valid={this.state.isEmailValid} message={this.state.error.email} />\r\n                        </section>\r\n\r\n                        <section>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                disabled={!this.state.isFormValid}\r\n                                onClick={this.redirectToResetPassword}\r\n                            >Send Password Reset Link\r\n                            </button>\r\n                        </section>\r\n                    </form>\r\n                    <br/>\r\n                    <br/>\r\n                    <footer\r\n                        type=\"submit\"\r\n                        className=\"btn-custom\"\r\n                        onClick={this.redirectToLogin.bind(this)}\r\n                    ><strong>Back to Login</strong>\r\n                    </footer>\r\n                </section>\r\n            </Col>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport '../ForgotPasword/ForgotPassword.css';\r\nimport {ErrorMsg} from '../Validation/ErrorMsg';\r\nimport {validateEmail} from \"../Validation/ValidateProperties\";\r\nimport {Col, Navbar} from \"react-bootstrap\";\r\nimport logo from \"../../../Raj/images/logo.png\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nexport class Feedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            feedback: \"\",\r\n            error: {},\r\n            isEmailValid: false,\r\n            isFormValid: false\r\n        }\r\n    }\r\n\r\n    redirectToHome = () => {\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n    feedbackSubmitted = (e) => {\r\n        e.preventDefault();\r\n        console.log('Function called');\r\n        this.setState({\r\n            email: \"\",\r\n            feedback: \"\",\r\n            error: {},\r\n            isEmailValid: false,\r\n            isFormValid: false,\r\n        })\r\n        alert(\"Here dialog with below confirmation will be implemented\\n \" +\r\n            \"Feedback submitted successfully!\\n Thank You.\");\r\n    }\r\n\r\n    updateProperties(name, value){\r\n        switch(name)\r\n        {\r\n            case \"email\":\r\n                this.setState({[name]: value}, validateEmail);\r\n                break;\r\n            case \"feedback\":\r\n                this.setState({[name]: value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    validateForm = () => {\r\n        const {isEmailValid} = this.state;\r\n        this.setState({\r\n            isFormValid: (isEmailValid)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Feedback called!\");\r\n        return (\r\n            <section>\r\n                <header>\r\n                    <Navbar className=\"navbg\">\r\n                        <Col align=\"center\">\r\n                            <Navbar.Brand href=\"login\">\r\n                                <img src={logo} alt=\"logo\" style={{ height: \"135px\" }} />\r\n                                <MediaQuery  maxWidth=\"500px\" >\r\n                                    {(matches) =>\r\n                                        matches\r\n                                            ? null\r\n                                            : <strong style={{ fontFamily: \"unset\", fontSize: \"xxx-large\" }}>EventGo</strong>\r\n                                    }\r\n                                </MediaQuery>\r\n                            </Navbar.Brand>\r\n                        </Col>\r\n                    </Navbar>\r\n                </header>\r\n                <Col align=\"center\">\r\n                    <br/>\r\n                    <header className=\"header justify-content-center\">\r\n                        <h3>Give Us Feedback</h3>\r\n                    </header>\r\n                    <section className=\"card forgot-password-card mt-2 hv-center\">\r\n                        <form className=\"form\">\r\n                            <br/>\r\n                            <section className=\"form-group text-left\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Enter your email id</label>\r\n                                <input type=\"email\"\r\n                                       className=\"form-control\"\r\n                                       id=\"email\"\r\n                                       placeholder=\"Enter your email id\"\r\n                                       value={this.state.email}\r\n                                       onChange={(e) =>\r\n                                           this.updateProperties('email',e.target.value)}\r\n                                />\r\n                                < ErrorMsg valid={this.state.isEmailValid} message={this.state.error.email} />\r\n                            </section>\r\n\r\n                            <section className=\"form-group text-left\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Feedback</label>\r\n                                <textarea type=\"feedback\"\r\n                                          className=\"form-control\"\r\n                                          id=\"feedback\"\r\n                                          placeholder=\"Please enter the feedback here\"\r\n                                          value={this.state.feedback}\r\n                                          onChange={(e) =>\r\n                                              this.updateProperties('feedback',e.target.value)}\r\n                                />\r\n                            </section>\r\n\r\n                            <section>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                    disabled={!this.state.isFormValid}\r\n                                    onClick={this.feedbackSubmitted}\r\n                                >Submit\r\n                                </button>\r\n                            </section>\r\n                        </form>\r\n                        <br/>\r\n                        <br/>\r\n                        <footer\r\n                            type=\"submit\"\r\n                            className=\"btn-custom\"\r\n                            onClick={this.redirectToHome.bind(this)}\r\n                        ><strong>Back to Home</strong>\r\n                        </footer>\r\n                    </section>\r\n                </Col>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Nav,Button,Row,Col,Navbar } from \"react-bootstrap\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport logo from '../images/logo.png';\r\nimport { MdNotificationsActive } from \"react-icons/md\";\r\nimport {FaUserCircle} from 'react-icons/fa'\r\n\r\nclass NavbarHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n\r\n        this.state = {\r\n            isLoggedin,\r\n            username,\r\n            isLogoutClicked: false\r\n        }\r\n\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        if (this.state.isLoggedin) {\r\n            sessionStorage.clear();\r\n            this.setState({ isLoggedin: false,isLogoutClicked: true  })\r\n        }\r\n        else {\r\n            this.setState({ isLoggedin: false,isLogoutClicked: true  })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const signinText = this.state.isLoggedin ?\r\n            <div>\r\n                <FaUserCircle style={{color:\"white\", height: \"29px\", width: \"35px\"}}/>\r\n                <a style={{color:\"white\",fontSize:\"20px\"}} href=\"createevent\">\r\n                    {this.state.username}</a>\r\n            </div> : null;\r\n\r\n        const buttonText = this.state.isLoggedin ?\r\n            \"Logout\" : \"Login/Register\";\r\n\r\n        if (this.state.isLogoutClicked) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                <Navbar className=\"navbg\" expand=\"lg\" sticky=\"top\">\r\n                    <section>\r\n                        <Navbar.Brand href=\"home\">\r\n                            <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                            <strong style={{ fontFamily: \"unset\", fontSize: \"medium\" }}>EventGo</strong>\r\n                        </Navbar.Brand>\r\n                    </section>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <Nav className=\"ml-auto\" variant=\"pills\">\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/createevent\" style={{ color: \"white\" }}>\r\n                                    CreateEvent\r\n                                </NavLink>\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/findevent\" style={{ color: \"white\" }}>\r\n                                    FindEvent\r\n                                </NavLink>\r\n                            </Nav>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        </ul>\r\n                        <Nav className=\"ml-auto\" variant=\"pills\">\r\n                            {signinText}\r\n                            &nbsp;\r\n                            &nbsp;\r\n                            <NavLink  exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/home\" style={{ color: \"white\" }}>\r\n                                <MdNotificationsActive style={{color:\"white\", height: \"29px\", width: \"35px\"}}/>\r\n                            </NavLink >\r\n                            &nbsp;\r\n                            &nbsp;\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.onButtonClick} style={{ backgroundColor: \"transparent\" }}>\r\n                                {buttonText}\r\n                            </Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarHeader;","import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Form, Button, InputGroup, Col, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\n \r\n\r\nclass CreateEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    renderByEventdd = (etype) => {\r\n        if (etype === \"car\") {\r\n            return this.props.eventTypeVal === \"cj\" ? <Row>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Seats available: {this.rengerOptionalinLabel()}</Form.Label>\r\n                    <div className=\"def-number-input number-input\">\r\n                        <Form.Control\r\n                            value={this.props.seats}\r\n                            name=\"seats\"\r\n                            onChange={this.props.onNumInputChange}\r\n                            type=\"number\"\r\n                            placeholder=\"0\" />\r\n                                               \r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"toAddr\">\r\n                    <Form.Label>Estimated price: {this.rengerOptionalinLabel()}</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">CAD $</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"0\"\r\n                            name=\"estPrice\"\r\n                            onChange={this.props.onNumInputChange}\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            value={this.props.estPrice} />\r\n                    </InputGroup>\r\n                </Form.Group> </Row> : null;\r\n        }\r\n    }\r\n    \r\n    renderDescription = () => {\r\n        console.log(this.props.isCreate)\r\n        return (this.props.isCreate ? <Form.Row>\r\n            <Form.Group as={Col} controlId=\"txtarea\">\r\n                <Form.Label>Description: <span className=\"fstyle\">{100 - this.props.description.length} words remaining</span>{this.rengerOptionalinLabel()}</Form.Label>\r\n                <Form.Control as=\"textarea\"\r\n                    placeholder=\"Max 100 words..\"\r\n                    name=\"description\"\r\n                    value={this.props.description}\r\n                    onChange={this.props.onDescriptionEnter}\r\n                />\r\n            </Form.Group>\r\n        </Form.Row> : null);\r\n    }\r\n\r\n    renderDateRange = () => {\r\n        if (!this.props.isCreate) {\r\n            return (<Form.Group as={Col} controlId=\"date\">\r\n                <Form.Label>Date Range <span className=\"fstyle\">(Optional)</span></Form.Label>\r\n                <div>\r\n                    <DatePicker className=\"calenderpicker form-control\"\r\n                        value={this.props.journeyDate2}\r\n                        name=\"journeyDate2\"\r\n                        selected={this.props.journeyDate2}\r\n                        onChange={this.props.handleDateChange2}\r\n                    />\r\n                </div>\r\n                \r\n            </Form.Group>)\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n    rengerOptionalinLabel = () => {\r\n        return this.props.isCreate ? <span className=\"fstyle\">(Optional)</span> : null;\r\n    }\r\n\r\n    render() {\r\n        const myStyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        \r\n        \r\n        let buttonText = this.props.isCreate ? (this.props.isUpdate ? 'Update' : 'Create'): ('Find Event');\r\n        let hedingText = this.props.isCreate ? 'Create Event' : 'Find Event';\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <br />\r\n                <div style={myStyle}>\r\n                \r\n                    <div>\r\n                        <Col>\r\n                            <h3>{hedingText}</h3>\r\n                        </Col>\r\n                    </div>\r\n                \r\n                    <Col>\r\n                        <Form noValidate validated={this.props.isValidated} onSubmit={this.props.mySubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"eventId\">\r\n                                    <Form.Label>Event type:</Form.Label>\r\n                                    <Form.Control as=\"select\" value={this.props.eventTypeVal} onChange={this.props.onEventddChange} required>\r\n                                        <option value=\"\">Choose...</option>\r\n                                        <option value=\"cj\">Car journey</option>\r\n                                        <option value=\"fj\">Flight journey</option>\r\n                                        <option value=\"oe\">Organizing event</option>\r\n\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid type.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"fromAddr\">\r\n                                    <Form.Label>From:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"From\"\r\n                                        value={this.props.fromAddress}\r\n                                        name=\"fromAddress\"\r\n                                        onChange={this.props.onFromToEnter} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"toAddr\">\r\n                                    <Form.Label>To:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"To\"\r\n                                        value={this.props.toAddress}\r\n                                        name=\"toAddress\"\r\n                                        onChange={this.props.onFromToEnter} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"date\">\r\n                                    <Form.Label>Date of journey:  {this.rengerOptionalinLabel()}</Form.Label>\r\n                                    <div>\r\n                                        <DatePicker className=\"calenderpicker form-control\"\r\n                                            value={this.props.journeyDate}\r\n                                            name=\"journeyDate\"\r\n                                            selected={this.props.journeyDate}\r\n                                            onChange={this.props.handleDateChange}\r\n                                        />\r\n                                    </div>\r\n                                        \r\n                                </Form.Group>\r\n                                {this.renderDateRange()}\r\n                            </Form.Row>\r\n                            \r\n                            <Form.Row>\r\n                                {this.renderByEventdd(\"car\")}\r\n                            </Form.Row>\r\n                            {this.renderDescription()}\r\n                            <div style={{paddingBottom:\"10px\"}}>\r\n\r\n                            \r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                {buttonText}\r\n                                </Button>\r\n                                </div>\r\n                        </Form>\r\n                    </Col>\r\n                    \r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CreateEvent;","import React, { Component } from 'react';\r\nimport { Form, Button, InputGroup, Col,Row } from \"react-bootstrap\";\r\n\r\nclass SortAndSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        const myStyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        const header = this.props.isCreate ? 'Events History' : 'Search Results'\r\n        return (<div style={myStyle}>\r\n            <Col>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>{header}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    \r\n                    \r\n                    \r\n                    <Col>\r\n                        <Form.Group controlId=\"eventId\">\r\n                            <Form.Label>Search by:</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.props.searchBy} name=\"searchBy\" onChange={this.props.onSearchByChange}>\r\n                                <option value=\"fromAddress\">From</option>\r\n                                <option value=\"toAddress\">To</option>\r\n                                <option value=\"seats\">Seats</option>\r\n                                <option value=\"estPrice\">Price</option>\r\n                                <option value=\"description\">Description</option>\r\n                    \r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"search\">\r\n                            <Form.Label>Search:</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Search..\"\r\n                                value={this.props.searchTerm}\r\n                                name=\"searchTerm\"\r\n                                onChange={this.props.onSearchTermChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"searchById\">\r\n                            <Form.Label>Sort by:</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.props.sortyBy} name=\"sorthBy\" onChange={this.props.onSortByChange}>\r\n                                <option value=\"id\">Event added</option>\r\n                                <option value=\"fromAddress\">From</option>\r\n                                <option value=\"toAddress\">To</option>\r\n                                <option value=\"journeyDate\">Date of Journey</option>\r\n                                <option value=\"seats\">Seats</option>\r\n                                <option value=\"estPrice\">Price</option>\r\n                                <option value=\"description\">Description</option>\r\n                    \r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                \r\n                </Row>\r\n            </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default SortAndSearch;","import React, { Component } from 'react';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\nclass PostEventHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false,\r\n            hoverDelete: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n    \r\n    toggleHoverDelete = () => {\r\n        this.setState({ hoverDelete: !this.state.hoverDelete })\r\n    }\r\n\r\n    render() { \r\n        let myStyle = {\r\n           \r\n            borderRadius: \"7px\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderStyle: \"outset\",\r\n            borderColor:\"#c3c6d8\"\r\n            \r\n        }\r\n        let myStyleDelete = {\r\n            backgroundColor: \"yellow\",\r\n            borderRadius: \"7px\",\r\n            cursor: \"pointer\"\r\n            \r\n        }\r\n        if (this.state.hover) {\r\n            myStyle = {\r\n                background: \"linear-gradient(180deg,#c3c6d8,transparent)\",\r\n                backgroundColor: \"grey\",\r\n                borderRadius: \"7px\",\r\n                cursor: \"pointer\"\r\n                \r\n            }\r\n        }\r\n        \r\n        if (this.state.hoverDelete) {\r\n            myStyleDelete = {\r\n                backgroundColor:\"red\",\r\n                borderRadius: \"7px\",\r\n                cursor: \"pointer\"\r\n                \r\n            }\r\n          }\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <br />\r\n                \r\n                    \r\n                <div style={myStyle}>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col sm={10}>\r\n                                <span onMouseEnter={this.toggleHover}\r\n                                    onMouseLeave={this.toggleHover}\r\n                                    onClick={() => this.props.onPostedEvetClicked(this.props.eventHistory)}\r\n                                    style={{wordWrap: \"break-word\"}}>\r\n                                    \r\n                                        From <strong>{this.props.eventHistory.fromAddress}</strong> to <strong>{this.props.eventHistory.toAddress}</strong> on <strong>{this.props.eventHistory.dateToDisplay}</strong> Seats available: <strong>{this.props.eventHistory.seats} </strong>\r\n                                    \r\n                                    \r\n                                         Estimated price: <strong>{this.props.eventHistory.estPrice} </strong>\r\n                                    \r\n                                  \r\n                                         Description: <strong>{this.props.eventHistory.description}</strong>\r\n                                    \r\n                                </span>\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                                <button type=\"button\" className=\"close\" aria-label=\"Close\"\r\n                                    onClick={() => this.props.onDeleteEvetClicked(this.props.eventHistory)}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </Col>\r\n                           \r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default PostEventHistory;","import React, { Component } from 'react';\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport CreateEvent from './createevent';\r\nimport SortAndSearch from './sortAndSearch'\r\nimport PostEventHistory from './posteventhist'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateEventContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = {\r\n            isLoggedin,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            dateToDisplay: '',\r\n            estPrice: 0,\r\n            description: '',\r\n            eventId: 0,\r\n            isUpdate: false,\r\n            updateItemId: 0,\r\n            searchTerm: '',\r\n            searchBy: 'fromAddress',\r\n            isValidated: false,\r\n            sortyBy:'id',\r\n            eventHistoryToDisplay: [\r\n                { id: 7, eventTypeVal: 'fj', fromAddress: 'Halifax', toAddress: 'India',dateToDisplay:\"07/23/2020\", seats: 2, estPrice: 100, description: 'Hello' }\r\n            ],\r\n            eventHistory: [{ id: 7, eventTypeVal: 'fj', fromAddress: 'Halifax', toAddress: 'India',dateToDisplay:\"07/23/2020\", seats: 2, estPrice: 100, description: 'Hello' }]\r\n        }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        console.log(form.checkValidity())\r\n        if (form.checkValidity() === false) {\r\n            this.setState({isValidated: true})\r\n            event.stopPropagation();\r\n            \r\n        }\r\n\r\n        else {\r\n            if (this.state.isUpdate) {\r\n                const { eventHistory, updateItemId } = this.state;\r\n                console.log(updateItemId)\r\n                eventHistory.map(item => {\r\n                    if (item.id === this.state.updateItemId) {\r\n                        item.eventTypeVal = this.state.eventTypeVal;\r\n                        item.fromAddress = this.state.fromAddress;\r\n                        item.toAddress = this.state.toAddress;\r\n                        item.seats = this.state.seats;\r\n                        item.estPrice = this.state.estPrice;\r\n                        item.dateToDisplay = this.state.dateToDisplay;\r\n                        item.description = this.state.description;\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                let id = this.state.eventId + 1;\r\n\r\n                this.setState({ eventId: id })\r\n                let newItem1 = {\r\n                    id: this.state.eventId,\r\n                    eventTypeVal: this.state.eventTypeVal,\r\n                    fromAddress: this.state.fromAddress,\r\n                    toAddress: this.state.toAddress,\r\n                    seats: this.state.seats,\r\n                    estPrice: this.state.estPrice,\r\n                    dateToDisplay: this.state.dateToDisplay,\r\n                    description: this.state.description\r\n                };\r\n        \r\n                this.state.eventHistory.push(newItem1);\r\n\r\n            }\r\n        \r\n            this.setState({\r\n                eventHistory: this.state.eventHistory,\r\n                eventHistoryToDisplay: this.state.eventHistory,\r\n                eventTypeVal: '',\r\n                fromAddress: '',\r\n                toAddress: '',\r\n                seats: 0,\r\n                journeyDate: '',\r\n                dateToDisplay: '',\r\n                estPrice: 0,\r\n                description: '',\r\n                isUpdate: false,\r\n                isValidated: false\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onNumInputChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value >= 0) {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    onDescriptionEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length <= 100) {\r\n            console.log(value.length)\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onEventddChange = (event) => {\r\n        this.setState({ eventTypeVal: event.target.value })\r\n        \r\n    }\r\n\r\n    handleDateChange = date => {\r\n        console.log(date)\r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate: date,\r\n                dateToDisplay: dateString\r\n            });\r\n        \r\n    };\r\n\r\n    onPostedEvetClicked = (history) => {\r\n        console.log(history)\r\n        const { id, eventTypeVal, fromAddress, toAddress, seats, estPrice, dateToDisplay, description } = history;\r\n        let dateToDisplay1 = dateToDisplay == undefined || dateToDisplay.length == 0 ? \"\" : new Date(dateToDisplay);\r\n        \r\n        this.setState({\r\n            eventTypeVal: eventTypeVal,\r\n            fromAddress: fromAddress,\r\n            toAddress: toAddress,\r\n            seats: seats,\r\n            estPrice: estPrice,\r\n            dateToDisplay: dateToDisplay,\r\n            journeyDate: dateToDisplay1,\r\n            description: description,\r\n            isUpdate: true,\r\n            updateItemId: id\r\n        });\r\n    }\r\n\r\n    onSearchTermChange = (event) => {\r\n\r\n        console.log(event.target.value)\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        const searchBy = this.state.searchBy;\r\n        let filteredEventHistory = '';\r\n        if (value.length > 0) {\r\n            filteredEventHistory = this.state.eventHistory.filter(item => item[searchBy].toString().toLowerCase().indexOf(value.toString().toLowerCase()) != -1);\r\n        }\r\n        else {\r\n            filteredEventHistory = this.state.eventHistory;\r\n        }\r\n        console.log(filteredEventHistory)\r\n        this.setState({ eventHistoryToDisplay: filteredEventHistory });\r\n    }\r\n\r\n    onSearchByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSortByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        let { eventHistoryToDisplay } = this.state\r\n        eventHistoryToDisplay.sort((a, b) => (a[value] > b[value]) ? 1 : -1);\r\n        this.setState({ eventHistoryToDisplay: eventHistoryToDisplay });\r\n    }\r\n\r\n    onDeleteEvetClicked = (history) => {\r\n        let { eventHistory } = this.state\r\n        console.log(history.id)\r\n        let filteredevents = eventHistory.filter(item => item.id != history.id);\r\n        this.setState({ eventHistory: filteredevents, eventHistoryToDisplay: filteredevents });\r\n    }\r\n\r\n    renderPostEventHistory = () => {\r\n        return (\r\n            this.state.eventHistoryToDisplay.length > 0 ?\r\n                this.state.eventHistoryToDisplay.map(item => <PostEventHistory\r\n                    key={item.id}\r\n                    eventHistory={item}\r\n                    onPostedEvetClicked={this.onPostedEvetClicked}\r\n                    onDeleteEvetClicked={this.onDeleteEvetClicked} />) :\r\n                <div>No items to display</div>);\r\n    };\r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div >\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <CreateEvent\r\n                            mySubmitHandler={this.mySubmitHandler}\r\n                            onFromToEnter={this.onFromToEnter}\r\n                            onNumInputChange={this.onNumInputChange}\r\n                            onEventddChange={this.onEventddChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            onDescriptionEnter = {this.onDescriptionEnter}\r\n                            \r\n                            eventTypeVal={this.state.eventTypeVal}\r\n                            fromAddress={this.state.fromAddress}\r\n                            toAddress={this.state.toAddress}\r\n                            seats={this.state.seats}\r\n                            journeyDate={this.state.journeyDate}\r\n                            estPrice={this.state.estPrice}\r\n                            description={this.state.description}\r\n                            isUpdate={this.state.isUpdate}\r\n                            isValidated={this.state.isValidated}\r\n                            isCreate={true}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <br/>\r\n                        <Row>\r\n                            <SortAndSearch\r\n                                onSearchTermChange={this.onSearchTermChange}\r\n                                onSearchByChange={this.onSearchByChange}\r\n                                onSortByChange={this.onSortByChange}\r\n                                searchTerm={this.state.searchTerm}\r\n                                searchBy={this.state.searchBy}\r\n                                sorthBy={this.state.sorthBy}\r\n                                isCreate={true}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                            {this.renderPostEventHistory()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default CreateEventContainer;","import React, { Component } from 'react';\r\nimport { Button, Row, Col, Card,Alert } from \"react-bootstrap\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { FcOk } from \"react-icons/fc\";\r\n\r\nclass SubReqDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            status: ''\r\n         }\r\n    }\r\n\r\n    onClickInfo = () => {\r\n        \r\n    }\r\n\r\n    onClickAccept = () => {\r\n        this.setState({status:\"accept\"})\r\n    }\r\n\r\n    onClickReject = () => {\r\n        this.setState({status:\"reject\",showAlert:true})\r\n    }\r\n\r\n    render() { \r\n        let icon = ''\r\n        if (this.state.status == \"accept\") {\r\n            icon = <div><FcOk /> <span style={{fontStyle: \"italic\"}}>Accepted </span></div>\r\n        }\r\n        else if (this.state.status == \"reject\") {\r\n            icon = <div><BsFillXCircleFill style={{color:\"#dc3545\"}}/> <span style={{fontStyle: \"italic\"}}>Rejected </span></div>\r\n        }\r\n        else {\r\n            icon=<span style={{fontStyle: \"italic\"}}>No action taken </span>\r\n        }\r\n\r\n\r\n        return (<div>\r\n            <br />\r\n            <Card border=\"secondary\">\r\n    \r\n                <Card.Body style={{ backgroundColor: \"#c3c6d8\" }}>\r\n      \r\n                    <Row  md={3} sm={2} xs={1}>\r\n                        <Col>\r\n                            <Button className=\"btn btn-info\" type=\"button\"\r\n                                onClick={this.onClickInfo}>\r\n                                Requester\r\n                    </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"btn btn-success\" type=\"button\"\r\n                                onClick={this.onClickAccept}>\r\n                                Accept\r\n                    </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"btn btn-danger\" type=\"button\"\r\n                                onClick={this.onClickReject}>\r\n                                Reject\r\n                    </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\"> {icon}</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n            \r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default SubReqDetails;","import React, { Component } from 'react';\r\nimport { Card,Accordion,Button,Row,Col } from \"react-bootstrap\";\r\nimport SubReqDetails from './subReqDetails'\r\n\r\nclass RequestMainCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        return (<div>\r\n            <Accordion>\r\n                <Card border=\"secondary\" >\r\n                    <Card.Header style={{padding:\"0\"}}>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                            Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                            Description: <strong>{this.props.eventDetail.description}</strong>\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            {this.props.eventDetail.requests.map(item => <SubReqDetails\r\n                                key={item.requestId}\r\n                            />)}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\"> {this.props.eventDetail.requests.length} Requests for this event</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">updated 3 days ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n                </Card>\r\n            </Accordion>\r\n            <br />\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default RequestMainCard;","import React, { Component } from 'react';\r\nimport ReqMainCard from './requestMainCard'\r\n\r\n\r\nclass RequestsReceived extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            eventDetails: [\r\n                {\r\n                    eventDetailId: 1, fromAddress: \"Halifax\", toAddress: \"Toronto\", dateToDisplay: \"07/02/2020\", seats: 4, estPrice: 200, description: \"sample desc\",\r\n                    requests: [\r\n                        { eventDetailId: 1, requestId: 1 },\r\n                        { eventDetailId: 1, requestId: 2 }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 2, fromAddress: \"Toronto\", toAddress: \"Quebic\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",\r\n                    requests: [\r\n                        { eventDetailId: 2, requestId: 10 }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 3, fromAddress: \"Halifax\", toAddress: \"PEI\", dateToDisplay: \"09/12/2020\", seats: 3, estPrice: 100, description: \"car details\",\r\n                    requests: [\r\n                        { eventDetailId: 3, requestId: 11 },\r\n                        { eventDetailId: 3, requestId: 12 },\r\n                        { eventDetailId: 3, requestId: 13 }\r\n                    ]\r\n                }\r\n            ]\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h5>Requests received for posted events</h5>\r\n                {this.state.eventDetails.map(item =>\r\n                    <ReqMainCard\r\n                        key={item.eventDetailId}\r\n                        eventDetail = {item}\r\n                    />)}\r\n                \r\n            </div>\r\n         );\r\n    } \r\n}\r\n \r\nexport default RequestsReceived;","import React, { Component } from 'react';  \r\nimport FindEvent from './notfications/requestsReceived'\r\nimport CreateEvent from './createevent'\r\nimport SortAndSearch from './sortAndSearch'\r\nimport PostEventHistory from './posteventhist'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass FindEventContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = { \r\n            isLoggedin,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            journeyDate2: '',\r\n            dateToDisplay: '',\r\n            dateToDisplay2: '',\r\n            estPrice: 0,\r\n            description: '',\r\n            eventId: 0,\r\n            updateItemId: 0,\r\n            searchTerm: '',\r\n            searchBy: 'fromAddress',\r\n            isValidated: false,\r\n            sortyBy:'id',\r\n            searchResults: [],\r\n            searchResultsToDisplay:[],\r\n            eventsHistory: [\r\n                { id: 7, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/02/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 11, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/03/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id:12, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/05/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 13, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 8, eventTypeVal: 'cj', fromAddress: 'Toronto', toAddress: 'Vancour', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 9, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'PEI', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 10, eventTypeVal: 'cj', fromAddress: 'India', toAddress: 'Toronto', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' }\r\n            ],\r\n            \r\n         }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { id, eventTypeVal, fromAddress, toAddress, seats, estPrice, dateToDisplay,dateToDisplay2 } = this.state;\r\n        let { eventsHistory } = this.state;\r\n        let isFiltered = false;\r\n        if (eventsHistory.length > 0) {\r\n            if (eventTypeVal.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['eventTypeVal'].toLowerCase() == eventTypeVal.toLowerCase());\r\n                isFiltered = true;\r\n            }\r\n            if (fromAddress.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['fromAddress'].toLowerCase() == fromAddress.toLowerCase());\r\n                isFiltered = true;\r\n            }\r\n            if (toAddress.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['toAddress'].toLowerCase() == toAddress.toLowerCase());\r\n                isFiltered = true;\r\n            } \r\n            if (dateToDisplay.length > 0 && dateToDisplay2.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['dateToDisplay'] >= dateToDisplay && item['dateToDisplay'] <= dateToDisplay2);\r\n                isFiltered = true;\r\n            }\r\n            else if (dateToDisplay.length > 0) {\r\n                console.log(dateToDisplay)\r\n                eventsHistory = eventsHistory.filter(item => item['dateToDisplay'] == dateToDisplay);\r\n                isFiltered = true;\r\n            }\r\n        }\r\n        if (!isFiltered) {\r\n            eventsHistory = [];\r\n        }\r\n        console.log(eventsHistory);\r\n\r\n        this.setState({\r\n            searchResults: eventsHistory,\r\n            searchResultsToDisplay:eventsHistory,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            dateToDisplay: '',\r\n            journeyDate2: '',\r\n            dateToDisplay2: '',\r\n            estPrice: 0,\r\n            isValidated: false\r\n        });\r\n\r\n\r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onDescriptionEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length <= 100) {\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onEventddChange = (event) => {\r\n        this.setState({ eventTypeVal: event.target.value })\r\n        \r\n    }\r\n\r\n    handleDateChange = date => {\r\n        \r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate: date,\r\n                dateToDisplay: dateString,\r\n                \r\n            });\r\n        \r\n    };\r\n\r\n    handleDateChange2 = date => {\r\n        \r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate2: date,\r\n                dateToDisplay2: dateString\r\n            });\r\n        \r\n    };\r\n\r\n    onPostedEvetClicked = (history) => {\r\n        \r\n    }\r\n\r\n    onSearchTermChange = (event) => {\r\n\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        const searchBy = this.state.searchBy;\r\n        let filteredsearchResults = '';\r\n        if (value.length > 0) {\r\n            filteredsearchResults = this.state.searchResults.filter(item => item[searchBy].toString().toLowerCase().indexOf(value.toString().toLowerCase()) != -1);\r\n        }\r\n        else {\r\n            filteredsearchResults = this.state.searchResults;\r\n        }\r\n        this.setState({ searchResultsToDisplay: filteredsearchResults });\r\n    }\r\n\r\n    onSearchByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSortByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        let { searchResultsToDisplay } = this.state\r\n        searchResultsToDisplay.sort((a, b) => (a[value] > b[value]) ? 1 : -1);\r\n        this.setState({ searchResultsToDisplay: searchResultsToDisplay });\r\n    }\r\n\r\n    onDeleteEvetClicked = (history) => {\r\n        let { searchResultsToDisplay } = this.state\r\n        let filteredevents = searchResultsToDisplay.filter(item => item.id != history.id);\r\n        this.setState({ searchResultsToDisplay: filteredevents });\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        return (\r\n            this.state.searchResultsToDisplay.length > 0 ?\r\n                this.state.searchResultsToDisplay.map(item => <PostEventHistory\r\n                    key={item.id}\r\n                    eventHistory={item}\r\n                    onPostedEvetClicked={this.onPostedEvetClicked}\r\n                    onDeleteEvetClicked={this.onDeleteEvetClicked} />) :\r\n                <div>No items to display</div>);\r\n    }\r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <CreateEvent\r\n                            mySubmitHandler={this.mySubmitHandler}\r\n                            onFromToEnter={this.onFromToEnter}\r\n                            onEventddChange={this.onEventddChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            handleDateChange2={this.handleDateChange2}\r\n                            onDescriptionEnter={this.onDescriptionEnter}\r\n                        \r\n                            eventTypeVal={this.state.eventTypeVal}\r\n                            fromAddress={this.state.fromAddress}\r\n                            toAddress={this.state.toAddress}\r\n                            seats={this.state.seats}\r\n                            journeyDate={this.state.journeyDate}\r\n                            journeyDate2={this.state.journeyDate2}\r\n                            estPrice={this.state.estPrice}\r\n                            description={this.state.description}\r\n                            isValidated={this.state.isValidated}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <br />\r\n                        <Row>\r\n                            <SortAndSearch\r\n                                onSearchTermChange={this.onSearchTermChange}\r\n                                onSearchByChange={this.onSearchByChange}\r\n                                onSortByChange={this.onSortByChange}\r\n                                searchTerm={this.state.searchTerm}\r\n                                searchBy={this.state.searchBy}\r\n                                sorthBy={this.state.sorthBy} />\r\n                        </Row>\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                            {this.renderSearchResults()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default FindEventContainer;","import React, { Component } from 'react';\r\nimport { Card, Accordion, Button, Row, Col } from \"react-bootstrap\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { FcOk } from \"react-icons/fc\";\r\nimport { MdHourglassFull } from \"react-icons/md\";\r\n\r\nclass ResponseMainCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    renderHeader = () => {\r\n        if (this.props.eventDetail.status == 1) {\r\n            return (<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                            Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                            Description: <strong>{this.props.eventDetail.description}</strong>\r\n            </Accordion.Toggle>)\r\n        }\r\n        else {\r\n            return <button type=\"button\" className=\"btn\" style={{cursor:\"auto\"}}>\r\n            From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                        Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                        Description: <strong>{this.props.eventDetail.description}</strong>\r\n        </button>\r\n        }\r\n    }\r\n\r\n    renderFooterText = () => {\r\n        if (this.props.eventDetail.status == 1) {\r\n            return <div><FcOk /> <span style={{fontStyle: \"italic\"}}>Accepted </span></div>\r\n        }\r\n        else if (this.props.eventDetail.status == 0) {\r\n            return <div><BsFillXCircleFill style={{color:\"#dc3545\"}}/> <span style={{fontStyle: \"italic\"}}>Rejected </span></div>\r\n        }\r\n        else {\r\n            return <div><MdHourglassFull style={{color:\"#ed9106\"}}/> <span style={{fontStyle: \"italic\"}}>pending </span></div>\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (<div>\r\n            <Accordion>\r\n            <Card border=\"secondary\" >\r\n                    <Card.Header  style={{padding:\"0\"}}>\r\n                        \r\n                    {this.renderHeader()}\r\n                        \r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            event owner details to contact...\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\">  {this.renderFooterText()}</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">updated 3 days ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n                </Card>\r\n                </Accordion>\r\n            <br/>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ResponseMainCard;","import React, { Component } from 'react';\r\nimport ResponseMainCard from './responseMainCard'\r\n\r\nclass ResponsesReceived extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            eventDetails: [\r\n                {\r\n                    eventDetailId: 1, fromAddress: \"Halifax\", toAddress: \"Moncton\", dateToDisplay: \"07/02/2020\", seats: 4, estPrice: 200, description: \"sample desc\",status:0\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 2, fromAddress: \"Moncton\", toAddress: \"Halifax\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",status:1\r\n                },\r\n                ,\r\n\r\n                {\r\n                    eventDetailId: 3, fromAddress: \"Moncton\", toAddress: \"Quebic\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",status:-1\r\n                }\r\n            ]\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h5>Responses received for requested events</h5>\r\n                {this.state.eventDetails.map(item =>\r\n                    <ResponseMainCard\r\n                        key={item.eventDetailId}\r\n                        eventDetail = {item}\r\n                    />)}\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ResponsesReceived;","import React, { Component } from 'react';\r\nimport RequestsReceived from './notfications/requestsReceived'\r\nimport ResponsesReceived from './notfications/responsesReceived'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = { \r\n            isLoggedin\r\n         }\r\n    } \r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div>\r\n            <Container>\r\n            <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <RequestsReceived />\r\n                    </Col>\r\n                    <Col>\r\n                        <ResponsesReceived />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport { Row,Col,Container } from \"react-bootstrap\";\r\n \r\nfunction ErrorPage() {\r\n  const greeting = 'Hello Function Component!';\r\n \r\n    return (\r\n        <div style={{paddingTop:\"10%\"}}>\r\n            <Container>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <h1 style={{color:\"#013b75\"}}>404</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                <span style={{color:\"#013b75\"}}>The page you are looking for doesn't exist on the server</span>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <span style={{color:\"#013b75\"}}>Please select items from the navbar</span>\r\n                </Row>\r\n                </Container>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n \r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport NavbarHeader from './navbarHeader'\r\nimport createeventContainer from './createeventContainer'\r\nimport FindEventContainer from './findeventContainer'\r\nimport home from './home'\r\nimport Error from './errorpage'\r\nimport './events.css';\r\n\r\nimport { Route,Switch  } from \"react-router-dom\";\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Container,Row} from \"react-bootstrap\";\r\n\r\nclass NavbarTemplate extends Component {\r\n    state = {  }\r\n    render() {        \r\n       \r\n\r\n        return (\r\n            \r\n            <div>\r\n                <div>\r\n                    <NavbarHeader />\r\n                </div>\r\n                \r\n                <div className=\"content\" style={{ overflow: \"auto\", height: \"100%\" }} >\r\n                    <Switch>\r\n                    <Route exact path=\"/\" component={home} />\r\n                    <Route exact path=\"/createevent\" component={createeventContainer}></Route>\r\n                    <Route exact path=\"/findevent\" component={FindEventContainer}></Route>\r\n                    <Route exact path=\"/home\" component={home}></Route>\r\n                    <Route exact path=\"/*\" component={Error} />\r\n                  \r\n                    </Switch>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavbarTemplate;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route,Switch } from \"react-router-dom\";\r\nimport LoginAndReg from './Raj/components/loginReg';\r\nimport {FooterCus} from './Jigar/Components/Footer/Footer';\r\nimport {ForgotPassword} from \"./Jigar/Components/ForgotPasword/ForgotPassword\";\r\nimport {Feedback} from \"./Jigar/Components/Feedback/Feeback\";\r\nimport NavbarTemplate from './Raj/components/navbarTemplate'\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/login\" component={LoginAndReg}></Route>\r\n        <Route exact path=\"/forgotpassword\" component={ForgotPassword}></Route>\r\n        <Route exact path=\"/feedback\" component={Feedback}></Route>\r\n\r\n\r\n        <Route component={NavbarTemplate} />\r\n    </Switch>\r\n      <FooterCus />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}