{"version":3,"sources":["serviceWorker.js","Raj/components/login.jsx","Raj/components/register.jsx","Raj/components/description.jsx","Raj/components/loginReg.jsx","Raj/components/navbarHeader.jsx","Raj/components/createevent.jsx","Raj/components/sortAndSearch.jsx","Raj/components/posteventhist.jsx","Raj/components/createeventContainer.jsx","Raj/components/notfications/subReqDetails.jsx","Raj/components/notfications/requestMainCard.jsx","Raj/components/notfications/requestsReceived.jsx","Raj/components/findeventContainer.jsx","Raj/components/notfications/responseMainCard.jsx","Raj/components/notfications/responsesReceived.jsx","Raj/components/home.jsx","Raj/components/errorpage.jsx","Raj/components/navbarTemplate.jsx","index.js","Raj/images/logo.png"],"names":["Boolean","window","location","hostname","match","Login","props","mySubmitHandler","event","preventDefault","state","username","password","length","sessionStorage","setItem","setState","isLoggedIn","isInvalidCred","onFieldChange","usr","target","name","val","value","this","to","errMsg","style","fontStyle","color","fontWeight","Navbar","className","Col","Brand","href","src","logo","alt","height","maxWidth","matches","fontFamily","fontSize","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Control","type","placeholder","onChange","paddingLeft","Button","variant","Component","Register","onFromToEnter","onPasswordEnter","invalidPwd","onEmailEnter","test","String","toLowerCase","invalidEmail","handleDateChange","date","dob","onGenderChange","genderVal","form","currentTarget","console","log","checkValidity","stopPropagation","isValid","validated","email","pwdbstyle","emailbstyle","errMsgPwd","errMsgEmail","Container","width","backgroundColor","borderRadius","noValidate","required","selected","Description","myStyle","myStyleSpan","lg","LoginAndReg","NavbarHeader","onButtonClick","isLoggedin","clear","isLogoutClicked","getItem","signinText","buttonText","md","xs","Nav","exact","activeClassName","Text","onClick","CreateEvent","renderByEventdd","etype","eventTypeVal","rengerOptionalinLabel","seats","onNumInputChange","InputGroup","Prepend","id","aria-describedby","estPrice","renderDescription","isCreate","description","onDescriptionEnter","renderDateRange","journeyDate2","handleDateChange2","pdfGeneratorFun","fromAddress","toAddress","journeyDate","myData","jsPDF","text","journeyOnlyDate","save","renderPDFButton","isUpdate","hedingText","isValidated","onEventddChange","Feedback","paddingBottom","SortAndSearch","header","searchBy","onSearchByChange","searchTerm","onSearchTermChange","sortyBy","onSortByChange","PostEventHistory","toggleHover","hover","toggleHoverDelete","hoverDelete","cursor","borderStyle","borderColor","background","onMouseEnter","onMouseLeave","onPostedEvetClicked","eventHistory","wordWrap","dateToDisplay","aria-label","onDeleteEvetClicked","aria-hidden","CreateEventContainer","updateItemId","map","item","eventId","newItem1","push","eventHistoryToDisplay","dateString","x","toString","split","index","indexOf","history","dateToDisplay1","undefined","Date","filteredEventHistory","filter","sort","a","b","filteredevents","renderPostEventHistory","key","sorthBy","SubReqDetails","onClickInfo","onClickAccept","status","onClickReject","showAlert","icon","Card","border","Body","Footer","RequestMainCard","Accordion","Header","padding","Toggle","eventKey","eventDetail","Collapse","requests","requestId","RequestsReceived","eventDetails","eventDetailId","FindEventContainer","dateToDisplay2","eventsHistory","isFiltered","searchResults","searchResultsToDisplay","filteredsearchResults","renderSearchResults","ResponseMainCard","renderHeader","renderFooterText","ResponsesReceived","Home","ErrorPage","paddingTop","NavbarTemplate","overflow","path","component","home","createeventContainer","Error","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5fb22faa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';  \r\nimport MediaQuery from 'react-responsive'\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './events.css';\r\nimport logo from '../images/logo.png'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLoggedIn: false,\r\n            isInvalidCred:false\r\n        }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n        \r\n        if (username.length > 0 && password.length > 0) {\r\n            sessionStorage.setItem( \"username\", username );\r\n            this.setState({ isLoggedIn: true, isInvalidCred: false });\r\n        }\r\n        else {\r\n            this.setState({isInvalidCred:true})\r\n        }\r\n    }\r\n\r\n    onFieldChange = (event) => {\r\n        let usr = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({ [usr]: val });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n        \r\n        let errMsg = this.state.isInvalidCred ? <span style={{ fontStyle: \"italic\", color:\"#dc3545\" }}><span style={{fontWeight:\"bold\"}}>Invalid username or password</span></span> : null;\r\n        return (\r\n            <Navbar className=\"navbg\">\r\n                <Col >\r\n                    <Navbar.Brand href=\"login\">\r\n                        \r\n                        <img src={logo} alt=\"logo\" style={{ height: \"135px\" }} />\r\n                        \r\n                        \r\n      \r\n      <MediaQuery  maxWidth=\"690px\" >\r\n      \r\n      {(matches) =>\r\n        matches\r\n          ? null\r\n          : <strong style={{ fontFamily: \"unset\", fontSize: \"xxx-large\" }}>EventGo</strong>\r\n      }\r\n    </MediaQuery>\r\n                        \r\n                        \r\n                    </Navbar.Brand>\r\n                </Col>\r\n                <Col >\r\n                \r\n                    <Form onSubmit={this.mySubmitHandler} className=\"loginForm\">\r\n                        \r\n                        <Form.Group as={Row} controlId=\"usr\">\r\n                            <Form.Label column sm=\"3.5\" className=\"loginLabel\" style={{ color: \"white\" }}>Username:</Form.Label>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"username\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onFieldChange}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group as={Row} controlId=\"pwd\">\r\n                            <Form.Label column sm=\"3.5\" className=\"loginLabel\" style={{ color: \"white\" }}>Password:</Form.Label>\r\n                            <Col sm=\"5\">\r\n                                <Form.Control type=\"password\" placeholder=\"\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onFieldChange}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <div style={{ paddingLeft: \"27%\" }}>\r\n                            <Row>\r\n                                <Col sm=\"2\">\r\n                            \r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Login\r\n                            </Button>\r\n                                </Col>\r\n                                <Col>\r\n                                    {errMsg}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './events.css'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            dob: '',\r\n            genderVal: '',\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            validated: false,\r\n            invalidPwd: false,\r\n            invalidEmail: false,\r\n            isValid:false\r\n            \r\n        }\r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onPasswordEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length > 4) {\r\n            this.setState({ invalidPwd: false }); \r\n        }\r\n        else {    \r\n            this.setState({ invalidPwd: true });\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onEmailEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        \r\n        if (re.test(String(value).toLowerCase())) {\r\n            this.setState({ invalidEmail: false }); \r\n        }\r\n        else {    \r\n            this.setState({ invalidEmail: true });\r\n        }\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n          dob: date\r\n        });\r\n    };\r\n    \r\n    onGenderChange = (event) => {\r\n        this.setState({ genderVal: event.target.value })\r\n        \r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        const form = event.currentTarget;\r\n        const { invalidPwd, invalidEmail, username } = this.state;\r\n        console.log(invalidPwd,invalidEmail)\r\n        if (form.checkValidity() === false || invalidPwd || invalidEmail) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            sessionStorage.setItem( \"username\", username );\r\n            this.setState({ isValid: true });\r\n        }\r\n      \r\n        this.setState({ validated: true });\r\n    };\r\n\r\n    render() { \r\n        \r\n        const myBordeSrtyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n\r\n        let pwdbstyle = this.state.invalidPwd ? \"invalidValuebStyle\" : \"validValuebStyle\";\r\n        let emailbstyle = this.state.invalidEmail ? \"invalidValuebStyle\" : \"validValuebStyle\";\r\n        let errMsgPwd = this.state.invalidPwd ? <span style={{ fontStyle: \"italic\" }}><small className=\"text-muted\" >Password must be atleast 5 Characters long</small></span> : null;\r\n        let errMsgEmail = this.state.invalidEmail ? <span style={{fontStyle: \"italic\"}}><small  className=\"text-muted\" >Please enter a valid email address</small></span> : null;\r\n\r\n        if (this.state.isValid) {\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n        return (<div style={{height:\"100%\"}}>\r\n            <br/>\r\n            <Col style={{height:\"100%\"}}>\r\n                <Container style={myBordeSrtyle}>\r\n\r\n                \r\n            <h2>Create new account</h2>\r\n            \r\n                <Form noValidate validated={this.state.validated} onSubmit={this.mySubmitHandler}>\r\n                        \r\n                    <Form.Group as={Row} controlId=\"usrname\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Username:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control type=\"text\" placeholder=\"\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.onFromToEnter}\r\n                            required\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                        \r\n\r\n                    <Form.Group as={Row} controlId=\"pwd\">\r\n                        <Form.Label column sm=\"3.5\"  className=\"loginLabel\">Password:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control type=\"password\" placeholder=\"\"\r\n                            name=\"password\" className={pwdbstyle}\r\n                            value={this.state.password}\r\n                            onChange={this.onPasswordEnter}\r\n                            required\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <Col>\r\n                    {errMsgPwd}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row} controlId=\"em\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Email:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control type=\"text\" placeholder=\"\"\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onEmailEnter}\r\n                            required\r\n                            className={emailbstyle}\r\n                            />\r\n                    </Col>\r\n                    <Col>\r\n                        {errMsgEmail}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"date\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Date of birth:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <DatePicker className=\"calenderpicker form-control\"\r\n                                selected={this.state.dob}\r\n                                onChange={this.handleDateChange}\r\n                                value={this.state.dob}\r\n                                required\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"gender\">\r\n                        <Form.Label column sm=\"3.5\" className=\"loginLabel\">Gender:</Form.Label>\r\n                        <Col sm=\"5\">\r\n                            <Form.Control as=\"select\" value={this.state.genderVal} onChange={this.onGenderChange} required>\r\n                                <option value=''>Choose...</option>\r\n                                <option value=\"ma\">Male</option>\r\n                                <option value=\"fe\">Female</option>\r\n                                <option value=\"ot\">Other</option>\r\n\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <div style={{ paddingLeft: \"27%\"}}>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Register\r\n                    </Button>\r\n                    </div>\r\n                </Form>\r\n                </Container>\r\n            </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Register;","import React, { Component } from 'react';\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport logo from '../images/logo.png'\r\n\r\nclass Description extends Component {\r\n    state = {  }\r\n    render() { \r\n        const myStyle = {\r\n            fontFamily: \"cursive\"\r\n            \r\n        }\r\n        const myStyleSpan = {\r\n            color: \"#035fbb\"\r\n            \r\n        }\r\n        const myBordeSrtyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        return (<div style={{\"height\":\"100%\"}}>\r\n            <br />\r\n            <Col style={{\"height\":\"100%\"}}>\r\n            <Container style={myBordeSrtyle}>\r\n                    \r\n                    <h2>Why EventGo</h2>\r\n               \r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>EventGo</span> is a platform to connect various travellers or tourists travelling from a\r\ncommon point of origin to the same destination</h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Long distance travelling</span> Post and Request any kind of event anywhere across the globe  </h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Signup for free</span> Event Creators and Event Requestor don't pay any registration fee or membership fee </h6>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col lg=\"1\">\r\n                        <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                    </Col>\r\n                    <Col>\r\n                        <h6 style={myStyle}><span style={myStyleSpan}>Make Connections</span> Sharing travelling plans is a great way to make new friends </h6>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Description;","import React, { Component } from 'react';  \r\nimport Login from './login'\r\nimport Register from './register'\r\nimport Description from './description'\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\nclass LoginAndReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                \r\n                <Login />\r\n                \r\n                <Row style={{width:\"100%\"}}>\r\n                    <Col >\r\n                        <Description />\r\n                    </Col>\r\n                    <Col >\r\n                        <Register />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginAndReg;","import React, { Component } from 'react';\r\nimport { Nav,Button,Row,Col,Navbar } from \"react-bootstrap\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport logo from '../images/logo.png'\r\n\r\nclass NavbarHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n\r\n        this.state = {\r\n            isLoggedin,\r\n            username,\r\n            isLogoutClicked: false\r\n        }\r\n        \r\n    }\r\n\r\n    onButtonClick = () => {\r\n        if (this.state.isLoggedin) {\r\n            sessionStorage.clear();\r\n            this.setState({ isLoggedin: false,isLogoutClicked: true  })\r\n        }\r\n        else {\r\n            this.setState({ isLoggedin: false,isLogoutClicked: true  })\r\n        }\r\n        \r\n    }\r\n\r\n    render() { \r\n        \r\n        const signinText = this.state.isLoggedin ?\r\n            <div style={{color:\"white\",fontSize:\"15px\"}}>Signed in as: <a style={{color:\"white\",fontSize:\"20px\"}} href=\"createevent\">{this.state.username}</a></div> : null;\r\n        \r\n        const buttonText = this.state.isLoggedin ?\r\n            \"Logout\" : \"Login/Register\";\r\n        \r\n        if (this.state.isLogoutClicked) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                \r\n                <Navbar className=\"navbg\">\r\n                    <Row style={{ width: \"100%\" }} md={3} sm={2} xs={1}>\r\n                        <Col lg={1}>\r\n                            <Navbar.Brand href=\"home\">\r\n                                <img src={logo} alt=\"logo\" style={{ height: \"35px\" }} />\r\n                                <strong style={{ fontFamily: \"unset\", fontSize: \"medium\" }}>EventGo</strong>\r\n                            </Navbar.Brand>\r\n                        </Col>\r\n                        <Col lg={7} >\r\n                            <Nav className=\"mr-auto\" variant=\"pills\" >\r\n                        \r\n                                {/* <NavLink href=\"home\" style={{color:\"white\"}} activeClassName=\"active\">Home</NavLink> */}\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/home\" style={{ color: \"white\" }}>\r\n                                    Home\r\n                        </NavLink>\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/createevent\" style={{ color: \"white\" }}>\r\n                                    CreateEvent\r\n                        </NavLink>\r\n                                <NavLink exact activeClassName=\"nav-link active\" className=\"nav-link\" to=\"/findevent\" style={{ color: \"white\" }}>\r\n                                    FindEvent\r\n                        </NavLink>\r\n                                {/* <Nav.Link href=\"createevent\" style={{ color: \"white\" }}>CreateEvent</Nav.Link>\r\n                        <Nav.Link href=\"findevent\" style={{ color: \"white\" }}>FindEvent</Nav.Link> */}\r\n                        \r\n                            </Nav>\r\n                        </Col>\r\n                        \r\n                        \r\n                        \r\n                        {/* className=\"justify-content-lg-end\" */}\r\n                        \r\n                        <Col lg={2}  >\r\n                            <Navbar.Text >\r\n                                {signinText}\r\n                            </Navbar.Text>\r\n                        </Col>\r\n                        <Col lg={2} >\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.onButtonClick} style={{ backgroundColor: \"transparent\" }}>\r\n                                {buttonText}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                            \r\n                </Navbar>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavbarHeader;","import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Form, Button, InputGroup, Col, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\nimport jsPDF from 'jspdf'\r\nimport { AiFillFilePdf } from \"react-icons/ai\";\r\n\r\n\r\n\r\n\r\n \r\n\r\nclass CreateEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    renderByEventdd = (etype) => {\r\n        if (etype === \"car\") {\r\n            return this.props.eventTypeVal === \"cj\" ? <Row>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Seats available: {this.rengerOptionalinLabel()}</Form.Label>\r\n                    <div className=\"def-number-input number-input\">\r\n                        <Form.Control\r\n                            value={this.props.seats}\r\n                            name=\"seats\"\r\n                            onChange={this.props.onNumInputChange}\r\n                            type=\"number\"\r\n                            placeholder=\"0\" />\r\n                                               \r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"toAddr\">\r\n                    <Form.Label>Estimated price: {this.rengerOptionalinLabel()}</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">CAD $</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder=\"0\"\r\n                            name=\"estPrice\"\r\n                            onChange={this.props.onNumInputChange}\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            value={this.props.estPrice} />\r\n                    </InputGroup>\r\n                </Form.Group> </Row> : null;\r\n        }\r\n    }\r\n    \r\n    renderDescription = () => {\r\n        console.log(this.props.isCreate)\r\n        return (this.props.isCreate ? <Form.Row>\r\n            <Form.Group as={Col} controlId=\"txtarea\">\r\n                <Form.Label>Description: <span className=\"fstyle\">{100 - this.props.description.length} words remaining</span>{this.rengerOptionalinLabel()}</Form.Label>\r\n                <Form.Control as=\"textarea\"\r\n                    placeholder=\"Max 100 words..\"\r\n                    name=\"description\"\r\n                    value={this.props.description}\r\n                    onChange={this.props.onDescriptionEnter}\r\n                />\r\n            </Form.Group>\r\n        </Form.Row> : null);\r\n    }\r\n\r\n    renderDateRange = () => {\r\n        if (!this.props.isCreate) {\r\n            return (<Form.Group as={Col} controlId=\"date\">\r\n                <Form.Label>Date Range <span className=\"fstyle\">(Optional)</span></Form.Label>\r\n                <div>\r\n                    <DatePicker className=\"calenderpicker form-control\"\r\n                        value={this.props.journeyDate2}\r\n                        name=\"journeyDate2\"\r\n                        selected={this.props.journeyDate2}\r\n                        onChange={this.props.handleDateChange2}\r\n                    />\r\n                </div>\r\n                \r\n            </Form.Group>)\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        \r\n    };\r\n\r\n    rengerOptionalinLabel = () => {\r\n        return this.props.isCreate ? <span className=\"fstyle\">(Optional)</span> : null;\r\n    }\r\n\r\n    pdfGeneratorFun = () => {\r\n        console.log(\"Type = \", this.props.eventTypeVal )\r\n        console.log(\"From = \", this.props.fromAddress )\r\n        console.log(\"To = \", this.props.toAddress )\r\n        console.log(\"Date of Journey = \", this.props.journeyDate )\r\n        console.log(\"Description = \", this.props.description )\r\n\r\n        \r\n        let myData = new jsPDF('p', 'pt')\r\n\r\n        myData.text(\"Your Information\", 244, 60);\r\n     \r\n        myData.text(210, 90, \"Event Type:\");\r\n        if(this.props.eventTypeVal === \"cj\"){\r\n            myData.text(300, 90, \"Car Journey\");\r\n            \r\n            myData.text(20,310,\"Seats:\")\r\n            myData.text(80, 310, this.props.seats);\r\n\r\n            myData.text(20,350,\"Estimated Price:\")\r\n            myData.text(140, 350, this.props.estPrice);\r\n        }\r\n\r\n        else if(this.props.eventTypeVal === \"oe\"){\r\n            myData.text(300, 90, \"Organizing Event\");    \r\n        }\r\n\r\n        else {\r\n            myData.text(300, 90, \"Flight Journey\");    \r\n        }\r\n\r\n        myData.text(20,140,\"From: \")  \r\n        myData.text(65, 140, this.props.fromAddress);\r\n        \r\n        myData.text(20,180,\"To:\")\r\n        myData.text(50, 180, this.props.toAddress);\r\n\r\n        \r\n    \r\n        myData.text(20,220,\"Date of Journey:\")\r\n        myData.text(145, 220, this.props.journeyOnlyDate);\r\n\r\n        myData.text(20,260,\"Description:\")\r\n        myData.text(110, 260, this.props.description);\r\n        \r\n        myData.save(\"PDFFile.pdf\");\r\n\r\n    }\r\n\r\n    renderPDFButton = () =>{\r\n\r\n        return this.props.isCreate ?  <Button style = {{backgroundColor : \" #ed5c3d \"}} onClick = {this.pdfGeneratorFun}>\r\n        <AiFillFilePdf/> Generate PDF\r\n        </Button> : null;\r\n\r\n    }\r\n\r\n    render() {\r\n        const myStyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        \r\n        \r\n        let buttonText = this.props.isCreate ? (this.props.isUpdate ? 'Update' : 'Create'): ('Find Event');\r\n        let hedingText = this.props.isCreate ? 'Create Event' : 'Find Event';\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <br />\r\n                <div style={myStyle}>\r\n                \r\n                    <div>\r\n                        <Col>\r\n                            <h3>{hedingText}</h3>\r\n                        </Col>\r\n                    </div>\r\n                \r\n                    <Col>\r\n                        <Form noValidate validated={this.props.isValidated} onSubmit={this.props.mySubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"eventId\">\r\n                                    <Form.Label>Event type:</Form.Label>\r\n                                    <Form.Control as=\"select\" value={this.props.eventTypeVal} onChange={this.props.onEventddChange} required>\r\n                                        <option value=\"\">Choose...</option>\r\n                                        <option value=\"cj\">Car journey</option>\r\n                                        <option value=\"fj\">Flight journey</option>\r\n                                        <option value=\"oe\">Organizing event</option>\r\n\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid type.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"fromAddr\">\r\n                                    <Form.Label>From:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"From\"\r\n                                        value={this.props.fromAddress}\r\n                                        name=\"fromAddress\"\r\n                                        onChange={this.props.onFromToEnter} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"toAddr\">\r\n                                    <Form.Label>To:</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"To\"\r\n                                        value={this.props.toAddress}\r\n                                        name=\"toAddress\"\r\n                                        onChange={this.props.onFromToEnter} required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"date\">\r\n                                    <Form.Label>Date of journey:  {this.rengerOptionalinLabel()}</Form.Label>\r\n                                    <div>\r\n                                        <DatePicker className=\"calenderpicker form-control\"\r\n                                            value={this.props.journeyDate}\r\n                                            name=\"journeyDate\"\r\n                                            selected={this.props.journeyDate}\r\n                                            onChange={this.props.handleDateChange}\r\n                                        />\r\n                                    </div>\r\n                                        \r\n                                </Form.Group>\r\n                                {this.renderDateRange()}\r\n                            </Form.Row>\r\n                            \r\n                            <Form.Row>\r\n                                {this.renderByEventdd(\"car\")}\r\n                            </Form.Row>\r\n                            {this.renderDescription()}\r\n                            <div style={{paddingBottom:\"10px\"}}>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                {buttonText}\r\n                                </Button>\r\n                                </Col>\r\n                                <Col>\r\n\r\n                         {this.renderPDFButton()}  \r\n                         </Col>                            \r\n                         </Row>\r\n                        \r\n                                </div>\r\n\r\n                        \r\n                        </Form>\r\n                        \r\n                    </Col>\r\n                    \r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CreateEvent;","import React, { Component } from 'react';\r\nimport { Form, Button, InputGroup, Col,Row } from \"react-bootstrap\";\r\n\r\nclass SortAndSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        const myStyle = {\r\n            width: \"100%\",\r\n            height:\"100%\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderRadius:\"7px\"\r\n            \r\n        }\r\n        const header = this.props.isCreate ? 'Events History' : 'Search Results'\r\n        return (<div style={myStyle}>\r\n            <Col>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>{header}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    \r\n                    \r\n                    \r\n                    <Col>\r\n                        <Form.Group controlId=\"eventId\">\r\n                            <Form.Label>Search by:</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.props.searchBy} name=\"searchBy\" onChange={this.props.onSearchByChange}>\r\n                                <option value=\"fromAddress\">From</option>\r\n                                <option value=\"toAddress\">To</option>\r\n                                <option value=\"seats\">Seats</option>\r\n                                <option value=\"estPrice\">Price</option>\r\n                                <option value=\"description\">Description</option>\r\n                    \r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"search\">\r\n                            <Form.Label>Search:</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Search..\"\r\n                                value={this.props.searchTerm}\r\n                                name=\"searchTerm\"\r\n                                onChange={this.props.onSearchTermChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"searchById\">\r\n                            <Form.Label>Sort by:</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.props.sortyBy} name=\"sorthBy\" onChange={this.props.onSortByChange}>\r\n                                <option value=\"id\">Event added</option>\r\n                                <option value=\"fromAddress\">From</option>\r\n                                <option value=\"toAddress\">To</option>\r\n                                <option value=\"journeyDate\">Date of Journey</option>\r\n                                <option value=\"seats\">Seats</option>\r\n                                <option value=\"estPrice\">Price</option>\r\n                                <option value=\"description\">Description</option>\r\n                    \r\n\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                \r\n                </Row>\r\n            </Col>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default SortAndSearch;","import React, { Component } from 'react';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport './events.css'\r\n\r\nclass PostEventHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false,\r\n            hoverDelete: false\r\n        }\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n    \r\n    toggleHoverDelete = () => {\r\n        this.setState({ hoverDelete: !this.state.hoverDelete })\r\n    }\r\n\r\n    render() { \r\n        let myStyle = {\r\n           \r\n            borderRadius: \"7px\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#c3c6d8\",\r\n            borderStyle: \"outset\",\r\n            borderColor:\"#c3c6d8\"\r\n            \r\n        }\r\n        let myStyleDelete = {\r\n            backgroundColor: \"yellow\",\r\n            borderRadius: \"7px\",\r\n            cursor: \"pointer\"\r\n            \r\n        }\r\n        if (this.state.hover) {\r\n            myStyle = {\r\n                background: \"linear-gradient(180deg,#c3c6d8,transparent)\",\r\n                backgroundColor: \"grey\",\r\n                borderRadius: \"7px\",\r\n                cursor: \"pointer\"\r\n                \r\n            }\r\n        }\r\n        \r\n        if (this.state.hoverDelete) {\r\n            myStyleDelete = {\r\n                backgroundColor:\"red\",\r\n                borderRadius: \"7px\",\r\n                cursor: \"pointer\"\r\n                \r\n            }\r\n          }\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <br />\r\n                \r\n                    \r\n                <div style={myStyle}>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col sm={10}>\r\n                                <span onMouseEnter={this.toggleHover}\r\n                                    onMouseLeave={this.toggleHover}\r\n                                    onClick={() => this.props.onPostedEvetClicked(this.props.eventHistory)}\r\n                                    style={{wordWrap: \"break-word\"}}>\r\n                                    \r\n                                        From <strong>{this.props.eventHistory.fromAddress}</strong> to <strong>{this.props.eventHistory.toAddress}</strong> on <strong>{this.props.eventHistory.dateToDisplay}</strong> Seats available: <strong>{this.props.eventHistory.seats} </strong>\r\n                                    \r\n                                    \r\n                                         Estimated price: <strong>{this.props.eventHistory.estPrice} </strong>\r\n                                    \r\n                                  \r\n                                         Description: <strong>{this.props.eventHistory.description}</strong>\r\n                                    \r\n                                </span>\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                                <button type=\"button\" className=\"close\" aria-label=\"Close\"\r\n                                    onClick={() => this.props.onDeleteEvetClicked(this.props.eventHistory)}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </Col>\r\n                           \r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default PostEventHistory;","import React, { Component } from 'react';\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport CreateEvent from './createevent';\r\nimport SortAndSearch from './sortAndSearch'\r\nimport PostEventHistory from './posteventhist'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateEventContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = {\r\n            isLoggedin,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            dateToDisplay: '',\r\n            estPrice: 0,\r\n            description: '',\r\n            eventId: 0,\r\n            isUpdate: false,\r\n            updateItemId: 0,\r\n            searchTerm: '',\r\n            searchBy: 'fromAddress',\r\n            isValidated: false,\r\n            sortyBy:'id',\r\n            eventHistoryToDisplay: [\r\n                { id: 7, eventTypeVal: 'fj', fromAddress: 'Halifax', toAddress: 'India',dateToDisplay:\"07/23/2020\", seats: 2, estPrice: 100, description: 'Hello' }\r\n            ],\r\n            eventHistory: [{ id: 7, eventTypeVal: 'fj', fromAddress: 'Halifax', toAddress: 'India',dateToDisplay:\"07/23/2020\", seats: 2, estPrice: 100, description: 'Hello' }]\r\n        }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        console.log(form.checkValidity())\r\n        if (form.checkValidity() === false) {\r\n            this.setState({isValidated: true})\r\n            event.stopPropagation();\r\n            \r\n        }\r\n\r\n        else {\r\n            if (this.state.isUpdate) {\r\n                const { eventHistory, updateItemId } = this.state;\r\n                console.log(updateItemId)\r\n                eventHistory.map(item => {\r\n                    if (item.id === this.state.updateItemId) {\r\n                        item.eventTypeVal = this.state.eventTypeVal;\r\n                        item.fromAddress = this.state.fromAddress;\r\n                        item.toAddress = this.state.toAddress;\r\n                        item.seats = this.state.seats;\r\n                        item.estPrice = this.state.estPrice;\r\n                        item.dateToDisplay = this.state.dateToDisplay;\r\n                        item.description = this.state.description;\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                let id = this.state.eventId + 1;\r\n\r\n                this.setState({ eventId: id })\r\n                let newItem1 = {\r\n                    id: this.state.eventId,\r\n                    eventTypeVal: this.state.eventTypeVal,\r\n                    fromAddress: this.state.fromAddress,\r\n                    toAddress: this.state.toAddress,\r\n                    seats: this.state.seats,\r\n                    estPrice: this.state.estPrice,\r\n                    dateToDisplay: this.state.dateToDisplay,\r\n                    description: this.state.description\r\n                };\r\n        \r\n                this.state.eventHistory.push(newItem1);\r\n\r\n            }\r\n        \r\n            this.setState({\r\n                eventHistory: this.state.eventHistory,\r\n                eventHistoryToDisplay: this.state.eventHistory,\r\n                eventTypeVal: '',\r\n                fromAddress: '',\r\n                toAddress: '',\r\n                seats: 0,\r\n                journeyDate: '',\r\n                dateToDisplay: '',\r\n                estPrice: 0,\r\n                description: '',\r\n                isUpdate: false,\r\n                isValidated: false\r\n            });\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onNumInputChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value >= 0) {\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onDescriptionEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length <= 100) {\r\n            console.log(value.length)\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onEventddChange = (event) => {\r\n        this.setState({ eventTypeVal: event.target.value })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    handleDateChange = date => {\r\n        console.log(date)\r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate: date,\r\n                dateToDisplay: dateString\r\n            });\r\n        \r\n    };\r\n\r\n    onPostedEvetClicked = (history) => {\r\n        console.log(history)\r\n        const { id, eventTypeVal, fromAddress, toAddress, seats, estPrice, dateToDisplay, description } = history;\r\n        let dateToDisplay1 = dateToDisplay == undefined || dateToDisplay.length == 0 ? \"\" : new Date(dateToDisplay);\r\n        \r\n        this.setState({\r\n            eventTypeVal: eventTypeVal,\r\n            fromAddress: fromAddress,\r\n            toAddress: toAddress,\r\n            seats: seats,\r\n            estPrice: estPrice,\r\n            dateToDisplay: dateToDisplay,\r\n            journeyDate: dateToDisplay1,\r\n            description: description,\r\n            isUpdate: true,\r\n            updateItemId: id\r\n        });\r\n    }\r\n\r\n    onSearchTermChange = (event) => {\r\n\r\n        console.log(event.target.value)\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        const searchBy = this.state.searchBy;\r\n        let filteredEventHistory = '';\r\n        if (value.length > 0) {\r\n            filteredEventHistory = this.state.eventHistory.filter(item => item[searchBy].toString().toLowerCase().indexOf(value.toString().toLowerCase()) != -1);\r\n        }\r\n        else {\r\n            filteredEventHistory = this.state.eventHistory;\r\n        }\r\n        console.log(filteredEventHistory)\r\n        this.setState({ eventHistoryToDisplay: filteredEventHistory });\r\n    }\r\n\r\n    onSearchByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSortByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        let { eventHistoryToDisplay } = this.state\r\n        eventHistoryToDisplay.sort((a, b) => (a[value] > b[value]) ? 1 : -1);\r\n        this.setState({ eventHistoryToDisplay: eventHistoryToDisplay });\r\n    }\r\n\r\n    onDeleteEvetClicked = (history) => {\r\n        let { eventHistory } = this.state\r\n        console.log(history.id)\r\n        let filteredevents = eventHistory.filter(item => item.id != history.id);\r\n        this.setState({ eventHistory: filteredevents, eventHistoryToDisplay: filteredevents });\r\n    }\r\n\r\n    renderPostEventHistory = () => {\r\n        return (\r\n            this.state.eventHistoryToDisplay.length > 0 ?\r\n                this.state.eventHistoryToDisplay.map(item => <PostEventHistory\r\n                    key={item.id}\r\n                    eventHistory={item}\r\n                    onPostedEvetClicked={this.onPostedEvetClicked}\r\n                    onDeleteEvetClicked={this.onDeleteEvetClicked} />) :\r\n                <div>No items to display</div>);\r\n    };\r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div >\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <CreateEvent\r\n                            mySubmitHandler={this.mySubmitHandler}\r\n                            onFromToEnter={this.onFromToEnter}\r\n                            onNumInputChange={this.onNumInputChange}\r\n                            onEventddChange={this.onEventddChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            onDescriptionEnter = {this.onDescriptionEnter}\r\n                            \r\n                            eventTypeVal={this.state.eventTypeVal}\r\n                            fromAddress={this.state.fromAddress}\r\n                            toAddress={this.state.toAddress}\r\n                            seats={this.state.seats}\r\n                            journeyDate={this.state.journeyDate}\r\n                            journeyOnlyDate={this.state.dateToDisplay}\r\n                            estPrice={this.state.estPrice}\r\n                            description={this.state.description}\r\n                            isUpdate={this.state.isUpdate}\r\n                            isValidated={this.state.isValidated}\r\n                            isCreate={true}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <br/>\r\n                        <Row>\r\n                            <SortAndSearch\r\n                                onSearchTermChange={this.onSearchTermChange}\r\n                                onSearchByChange={this.onSearchByChange}\r\n                                onSortByChange={this.onSortByChange}\r\n                                searchTerm={this.state.searchTerm}\r\n                                searchBy={this.state.searchBy}\r\n                                sorthBy={this.state.sorthBy}\r\n                                isCreate={true}\r\n                            />  \r\n                        </Row>\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                            {this.renderPostEventHistory()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default CreateEventContainer;","import React, { Component } from 'react';\r\nimport { Button, Row, Col, Card,Alert } from \"react-bootstrap\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { FcOk } from \"react-icons/fc\";\r\n\r\nclass SubReqDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            status: ''\r\n         }\r\n    }\r\n\r\n    onClickInfo = () => {\r\n        \r\n    }\r\n\r\n    onClickAccept = () => {\r\n        this.setState({status:\"accept\"})\r\n    }\r\n\r\n    onClickReject = () => {\r\n        this.setState({status:\"reject\",showAlert:true})\r\n    }\r\n\r\n    render() { \r\n        let icon = ''\r\n        if (this.state.status == \"accept\") {\r\n            icon = <div><FcOk /> <span style={{fontStyle: \"italic\"}}>Accepted </span></div>\r\n        }\r\n        else if (this.state.status == \"reject\") {\r\n            icon = <div><BsFillXCircleFill style={{color:\"#dc3545\"}}/> <span style={{fontStyle: \"italic\"}}>Rejected </span></div>\r\n        }\r\n        else {\r\n            icon=<span style={{fontStyle: \"italic\"}}>No action taken </span>\r\n        }\r\n\r\n\r\n        return (<div>\r\n            <br />\r\n            <Card border=\"secondary\">\r\n    \r\n                <Card.Body style={{ backgroundColor: \"#c3c6d8\" }}>\r\n      \r\n                    <Row  md={3} sm={2} xs={1}>\r\n                        <Col>\r\n                            <Button className=\"btn btn-info\" type=\"button\"\r\n                                onClick={this.onClickInfo}>\r\n                                Requester\r\n                    </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"btn btn-success\" type=\"button\"\r\n                                onClick={this.onClickAccept}>\r\n                                Accept\r\n                    </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button className=\"btn btn-danger\" type=\"button\"\r\n                                onClick={this.onClickReject}>\r\n                                Reject\r\n                    </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\"> {icon}</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n            \r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default SubReqDetails;","import React, { Component } from 'react';\r\nimport { Card,Accordion,Button,Row,Col } from \"react-bootstrap\";\r\nimport SubReqDetails from './subReqDetails'\r\n\r\nclass RequestMainCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        return (<div>\r\n            <Accordion>\r\n                <Card border=\"secondary\" >\r\n                    <Card.Header style={{padding:\"0\"}}>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                            Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                            Description: <strong>{this.props.eventDetail.description}</strong>\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            {this.props.eventDetail.requests.map(item => <SubReqDetails\r\n                                key={item.requestId}\r\n                            />)}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\"> {this.props.eventDetail.requests.length} Requests for this event</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">updated 3 days ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n                </Card>\r\n            </Accordion>\r\n            <br />\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default RequestMainCard;","import React, { Component } from 'react';\r\nimport ReqMainCard from './requestMainCard'\r\n\r\n\r\nclass RequestsReceived extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            eventDetails: [\r\n                {\r\n                    eventDetailId: 1, fromAddress: \"Halifax\", toAddress: \"Toronto\", dateToDisplay: \"07/02/2020\", seats: 4, estPrice: 200, description: \"sample desc\",\r\n                    requests: [\r\n                        { eventDetailId: 1, requestId: 1 },\r\n                        { eventDetailId: 1, requestId: 2 }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 2, fromAddress: \"Toronto\", toAddress: \"Quebic\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",\r\n                    requests: [\r\n                        { eventDetailId: 2, requestId: 10 }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 3, fromAddress: \"Halifax\", toAddress: \"PEI\", dateToDisplay: \"09/12/2020\", seats: 3, estPrice: 100, description: \"car details\",\r\n                    requests: [\r\n                        { eventDetailId: 3, requestId: 11 },\r\n                        { eventDetailId: 3, requestId: 12 },\r\n                        { eventDetailId: 3, requestId: 13 }\r\n                    ]\r\n                }\r\n            ]\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h5>Requests received for posted events</h5>\r\n                {this.state.eventDetails.map(item =>\r\n                    <ReqMainCard\r\n                        key={item.eventDetailId}\r\n                        eventDetail = {item}\r\n                    />)}\r\n                \r\n            </div>\r\n         );\r\n    } \r\n}\r\n \r\nexport default RequestsReceived;","import React, { Component } from 'react';  \r\nimport FindEvent from './notfications/requestsReceived'\r\nimport CreateEvent from './createevent'\r\nimport SortAndSearch from './sortAndSearch'\r\nimport PostEventHistory from './posteventhist'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass FindEventContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = { \r\n            isLoggedin,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            journeyDate2: '',\r\n            dateToDisplay: '',\r\n            dateToDisplay2: '',\r\n            estPrice: 0,\r\n            description: '',\r\n            eventId: 0,\r\n            updateItemId: 0,\r\n            searchTerm: '',\r\n            searchBy: 'fromAddress',\r\n            isValidated: false,\r\n            sortyBy:'id',\r\n            searchResults: [],\r\n            searchResultsToDisplay:[],\r\n            eventsHistory: [\r\n                { id: 7, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/02/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 11, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/03/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id:12, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/05/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 13, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'Toronto', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 8, eventTypeVal: 'cj', fromAddress: 'Toronto', toAddress: 'Vancour', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 9, eventTypeVal: 'cj', fromAddress: 'Halifax', toAddress: 'PEI', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' },\r\n                { id: 10, eventTypeVal: 'cj', fromAddress: 'India', toAddress: 'Toronto', dateToDisplay: \"07/23/2020\", seats: 2, estPrice: 100, description: 'new car' }\r\n            ],\r\n            \r\n         }\r\n    }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { id, eventTypeVal, fromAddress, toAddress, seats, estPrice, dateToDisplay,dateToDisplay2 } = this.state;\r\n        let { eventsHistory } = this.state;\r\n        let isFiltered = false;\r\n        if (eventsHistory.length > 0) {\r\n            if (eventTypeVal.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['eventTypeVal'].toLowerCase() == eventTypeVal.toLowerCase());\r\n                isFiltered = true;\r\n            }\r\n            if (fromAddress.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['fromAddress'].toLowerCase() == fromAddress.toLowerCase());\r\n                isFiltered = true;\r\n            }\r\n            if (toAddress.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['toAddress'].toLowerCase() == toAddress.toLowerCase());\r\n                isFiltered = true;\r\n            } \r\n            if (dateToDisplay.length > 0 && dateToDisplay2.length > 0) {\r\n                eventsHistory = eventsHistory.filter(item => item['dateToDisplay'] >= dateToDisplay && item['dateToDisplay'] <= dateToDisplay2);\r\n                isFiltered = true;\r\n            }\r\n            else if (dateToDisplay.length > 0) {\r\n                console.log(dateToDisplay)\r\n                eventsHistory = eventsHistory.filter(item => item['dateToDisplay'] == dateToDisplay);\r\n                isFiltered = true;\r\n            }\r\n        }\r\n        if (!isFiltered) {\r\n            eventsHistory = [];\r\n        }\r\n        console.log(eventsHistory);\r\n\r\n        this.setState({\r\n            searchResults: eventsHistory,\r\n            searchResultsToDisplay:eventsHistory,\r\n            eventTypeVal: '',\r\n            fromAddress: '',\r\n            toAddress: '',\r\n            seats: 0,\r\n            journeyDate: '',\r\n            dateToDisplay: '',\r\n            journeyDate2: '',\r\n            dateToDisplay2: '',\r\n            estPrice: 0,\r\n            isValidated: false\r\n        });\r\n\r\n\r\n    }\r\n\r\n    onFromToEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onDescriptionEnter = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (value.length <= 100) {\r\n            this.setState({ [name]: value });\r\n        }\r\n        \r\n    }\r\n\r\n    onEventddChange = (event) => {\r\n        this.setState({ eventTypeVal: event.target.value })\r\n        \r\n    }\r\n\r\n    handleDateChange = date => {\r\n        \r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate: date,\r\n                dateToDisplay: dateString,\r\n                \r\n            });\r\n        \r\n    };\r\n\r\n    handleDateChange2 = date => {\r\n        \r\n        let dateString = \"\";\r\n        if (date != null) {\r\n            let x = date.toString().split(' ');\r\n            let mArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            let index = mArr.indexOf(x[1]) + 1;\r\n            index = index.toString().length === 1 ? \"0\" + index.toString() : index.toString();\r\n            dateString = index + \"/\" + x[2] + \"/\" + x[3];\r\n        }\r\n            this.setState({\r\n                journeyDate2: date,\r\n                dateToDisplay2: dateString\r\n            });\r\n        \r\n    };\r\n\r\n    onPostedEvetClicked = (history) => {\r\n        \r\n    }\r\n\r\n    onSearchTermChange = (event) => {\r\n\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        const searchBy = this.state.searchBy;\r\n        let filteredsearchResults = '';\r\n        if (value.length > 0) {\r\n            filteredsearchResults = this.state.searchResults.filter(item => item[searchBy].toString().toLowerCase().indexOf(value.toString().toLowerCase()) != -1);\r\n        }\r\n        else {\r\n            filteredsearchResults = this.state.searchResults;\r\n        }\r\n        this.setState({ searchResultsToDisplay: filteredsearchResults });\r\n    }\r\n\r\n    onSearchByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSortByChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n        let { searchResultsToDisplay } = this.state\r\n        searchResultsToDisplay.sort((a, b) => (a[value] > b[value]) ? 1 : -1);\r\n        this.setState({ searchResultsToDisplay: searchResultsToDisplay });\r\n    }\r\n\r\n    onDeleteEvetClicked = (history) => {\r\n        let { searchResultsToDisplay } = this.state\r\n        let filteredevents = searchResultsToDisplay.filter(item => item.id != history.id);\r\n        this.setState({ searchResultsToDisplay: filteredevents });\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        return (\r\n            this.state.searchResultsToDisplay.length > 0 ?\r\n                this.state.searchResultsToDisplay.map(item => <PostEventHistory\r\n                    key={item.id}\r\n                    eventHistory={item}\r\n                    onPostedEvetClicked={this.onPostedEvetClicked}\r\n                    onDeleteEvetClicked={this.onDeleteEvetClicked} />) :\r\n                <div>No items to display</div>);\r\n    }\r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <CreateEvent\r\n                            mySubmitHandler={this.mySubmitHandler}\r\n                            onFromToEnter={this.onFromToEnter}\r\n                            onEventddChange={this.onEventddChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            handleDateChange2={this.handleDateChange2}\r\n                            onDescriptionEnter={this.onDescriptionEnter}\r\n                        \r\n                            eventTypeVal={this.state.eventTypeVal}\r\n                            fromAddress={this.state.fromAddress}\r\n                            toAddress={this.state.toAddress}\r\n                            seats={this.state.seats}\r\n                            journeyDate={this.state.journeyDate}\r\n                            journeyDate2={this.state.journeyDate2}\r\n                            estPrice={this.state.estPrice}\r\n                            description={this.state.description}\r\n                            isValidated={this.state.isValidated}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <br />\r\n                        <Row>\r\n                            <SortAndSearch\r\n                                onSearchTermChange={this.onSearchTermChange}\r\n                                onSearchByChange={this.onSearchByChange}\r\n                                onSortByChange={this.onSortByChange}\r\n                                searchTerm={this.state.searchTerm}\r\n                                searchBy={this.state.searchBy}\r\n                                sorthBy={this.state.sorthBy} />\r\n                        </Row>\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                            {this.renderSearchResults()}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default FindEventContainer;","import React, { Component } from 'react';\r\nimport { Card, Accordion, Button, Row, Col } from \"react-bootstrap\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { FcOk } from \"react-icons/fc\";\r\nimport { MdHourglassFull } from \"react-icons/md\";\r\n\r\nclass ResponseMainCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    renderHeader = () => {\r\n        if (this.props.eventDetail.status == 1) {\r\n            return (<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                            Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                            Description: <strong>{this.props.eventDetail.description}</strong>\r\n            </Accordion.Toggle>)\r\n        }\r\n        else {\r\n            return <button type=\"button\" className=\"btn\" style={{cursor:\"auto\"}}>\r\n            From <strong>{this.props.eventDetail.fromAddress}</strong> to <strong>{this.props.eventDetail.toAddress}</strong> on <strong>{this.props.eventDetail.dateToDisplay}</strong> Seats available: <strong>{this.props.eventDetail.seats} </strong>\r\n                        Estimated price: <strong>$ {this.props.eventDetail.estPrice} </strong>\r\n                        Description: <strong>{this.props.eventDetail.description}</strong>\r\n        </button>\r\n        }\r\n    }\r\n\r\n    renderFooterText = () => {\r\n        if (this.props.eventDetail.status == 1) {\r\n            return <div><FcOk /> <span style={{fontStyle: \"italic\"}}>Accepted </span></div>\r\n        }\r\n        else if (this.props.eventDetail.status == 0) {\r\n            return <div><BsFillXCircleFill style={{color:\"#dc3545\"}}/> <span style={{fontStyle: \"italic\"}}>Rejected </span></div>\r\n        }\r\n        else {\r\n            return <div><MdHourglassFull style={{color:\"#ed9106\"}}/> <span style={{fontStyle: \"italic\"}}>pending </span></div>\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (<div>\r\n            <Accordion>\r\n            <Card border=\"secondary\" >\r\n                    <Card.Header  style={{padding:\"0\"}}>\r\n                        \r\n                    {this.renderHeader()}\r\n                        \r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            event owner details to contact...\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Footer className=\"justify-content-end\">\r\n                    <Row>\r\n                        <Col>\r\n                            <small className=\"text-muted\">  {this.renderFooterText()}</small>\r\n                        </Col>\r\n                        <Col>\r\n                            <small className=\"text-muted\">updated 3 days ago</small>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n                </Card>\r\n                </Accordion>\r\n            <br/>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ResponseMainCard;","import React, { Component } from 'react';\r\nimport ResponseMainCard from './responseMainCard'\r\n\r\nclass ResponsesReceived extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            eventDetails: [\r\n                {\r\n                    eventDetailId: 1, fromAddress: \"Halifax\", toAddress: \"Moncton\", dateToDisplay: \"07/02/2020\", seats: 4, estPrice: 200, description: \"sample desc\",status:0\r\n                },\r\n\r\n                {\r\n                    eventDetailId: 2, fromAddress: \"Moncton\", toAddress: \"Halifax\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",status:1\r\n                },\r\n                ,\r\n\r\n                {\r\n                    eventDetailId: 3, fromAddress: \"Moncton\", toAddress: \"Quebic\", dateToDisplay: \"07/12/2020\", seats: 1, estPrice: 250, description: \"sample desc\",status:-1\r\n                }\r\n            ]\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h5>Responses received for requested events</h5>\r\n                {this.state.eventDetails.map(item =>\r\n                    <ResponseMainCard\r\n                        key={item.eventDetailId}\r\n                        eventDetail = {item}\r\n                    />)}\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ResponsesReceived;","import React, { Component } from 'react';\r\nimport RequestsReceived from './notfications/requestsReceived'\r\nimport ResponsesReceived from './notfications/responsesReceived'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let isLoggedin = true;\r\n        const username = sessionStorage.getItem(\"username\");\r\n        if (username == null) {\r\n            isLoggedin = false;\r\n        }\r\n        this.state = { \r\n            isLoggedin\r\n         }\r\n    } \r\n\r\n    render() { \r\n        if (!this.state.isLoggedin) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return (<div>\r\n            <Container>\r\n            <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <RequestsReceived />\r\n                    </Col>\r\n                    <Col>\r\n                        <ResponsesReceived />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport { Row,Col,Container } from \"react-bootstrap\";\r\n \r\nfunction ErrorPage() {\r\n  const greeting = 'Hello Function Component!';\r\n \r\n    return (\r\n        <div style={{paddingTop:\"10%\"}}>\r\n            <Container>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <h1 style={{color:\"#013b75\"}}>404</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                <span style={{color:\"#013b75\"}}>The page you are looking for doesn't exist on the server</span>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <span style={{color:\"#013b75\"}}>Please select items from the navbar</span>\r\n                </Row>\r\n                </Container>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n \r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport NavbarHeader from './navbarHeader'\r\nimport createeventContainer from './createeventContainer'\r\nimport FindEventContainer from './findeventContainer'\r\nimport home from './home'\r\nimport Error from './errorpage'\r\nimport './events.css';\r\n\r\nimport { Route,Switch  } from \"react-router-dom\";\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Col, Container,Row} from \"react-bootstrap\";\r\n\r\nclass NavbarTemplate extends Component {\r\n    state = {  }\r\n    render() {        \r\n       \r\n\r\n        return (\r\n            \r\n            <div>\r\n                <div>\r\n                    <NavbarHeader />\r\n                </div>\r\n                \r\n                <div className=\"content\" style={{ overflow: \"auto\", height: \"100%\" }} >\r\n                    <Switch>\r\n                    <Route exact path=\"/\" component={home} />\r\n                    <Route exact path=\"/createevent\" component={createeventContainer}></Route>\r\n                    <Route exact path=\"/findevent\" component={FindEventContainer}></Route>\r\n                    <Route exact path=\"/home\" component={home}></Route>\r\n                    <Route exact path=\"/*\" component={Error} />\r\n                  \r\n                    </Switch>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavbarTemplate;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route,Switch } from \"react-router-dom\";\r\nimport LoginAndReg from './Raj/components/loginReg';\r\n\r\nimport NavbarTemplate from './Raj/components/navbarTemplate'\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n    \r\n      <Route exact path=\"/login\" component={LoginAndReg}></Route>\r\n      \r\n      <Route component={NavbarTemplate} />\r\n      \r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.b6440551.png\";"],"sourceRoot":""}